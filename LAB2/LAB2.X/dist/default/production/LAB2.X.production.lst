

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 12:56:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  001E                     _ADRESH	set	30
   287  0001                     _TMR0	set	1
   288  0007                     _PORTC	set	7
   289  0006                     _PORTBbits	set	6
   290  0007                     _PORTCbits	set	7
   291  0006                     _PORTB	set	6
   292  0008                     _PORTD	set	8
   293  0005                     _PORTAbits	set	5
   294  001F                     _ADCON0bits	set	31
   295  000B                     _INTCONbits	set	11
   296  000C                     _PIR1bits	set	12
   297  0081                     _OPTION_REGbits	set	129
   298  008C                     _PIE1bits	set	140
   299  009F                     _ADCON1bits	set	159
   300  0087                     _TRISC	set	135
   301  0086                     _TRISB	set	134
   302  0085                     _TRISA	set	133
   303  0088                     _TRISD	set	136
   304  0188                     _ANSELbits	set	392
   305  0189                     _ANSELH	set	393
   306  0188                     _ANSEL	set	392
   307                           
   308                           	psect	cinit
   309  000F                     start_initialization:	
   310                           ; #config settings
   311                           
   312  000F                     __initialization:
   313                           
   314                           ; Clear objects allocated to COMMON
   315  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   316  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   317  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   318  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   319  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   320  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   321  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   322                           
   323                           ; Clear objects allocated to BANK0
   324  0016  1283               	bcf	3,5	;RP0=0, select bank0
   325  0017  1303               	bcf	3,6	;RP1=0, select bank0
   326  0018  01A2               	clrf	__pbssBANK0& (0+127)
   327  0019                     end_of_initialization:	
   328                           ;End of C runtime variable initialization code
   329                           
   330  0019                     __end_of__initialization:
   331  0019  0183               	clrf	3
   332  001A  120A  118A  28CD   	ljmp	_main	;jump to C main() function
   333                           
   334                           	psect	bssCOMMON
   335  0070                     __pbssCOMMON:
   336  0070                     _ADCvalue:
   337  0070                     	ds	1
   338  0071                     _multiplex:
   339  0071                     	ds	1
   340  0072                     _sevenval:
   341  0072                     	ds	1
   342  0073                     _ADCresult:
   343  0073                     	ds	1
   344  0074                     _ADC:
   345  0074                     	ds	1
   346  0075                     _check1:
   347  0075                     	ds	1
   348  0076                     _check0:
   349  0076                     	ds	1
   350                           
   351                           	psect	bssBANK0
   352  0022                     __pbssBANK0:
   353  0022                     _sevenhex:
   354  0022                     	ds	1
   355                           
   356                           	psect	cstackCOMMON
   357  0077                     __pcstackCOMMON:
   358  0077                     ?_setup:
   359  0077                     ?_getADC:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0077                     ?_seven_seg:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0077                     ?_ISR:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0077                     ??_ISR:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0077                     ?_main:	
   372                           ; 1 bytes @ 0x0
   373                           
   374                           
   375                           ; 1 bytes @ 0x0
   376  0077                     	ds	2
   377  0079                     ??_setup:
   378  0079                     ??_getADC:	
   379                           ; 1 bytes @ 0x2
   380                           
   381  0079                     ??_seven_seg:	
   382                           ; 1 bytes @ 0x2
   383                           
   384                           
   385                           ; 1 bytes @ 0x2
   386  0079                     	ds	2
   387  007B                     seven_seg@sevenval:
   388                           
   389                           ; 1 bytes @ 0x4
   390  007B                     	ds	1
   391                           
   392                           	psect	cstackBANK0
   393  0020                     __pcstackBANK0:
   394  0020                     ??_main:
   395                           
   396                           ; 1 bytes @ 0x0
   397  0020                     	ds	2
   398                           
   399                           	psect	maintext
   400  00CD                     __pmaintext:	
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 86 in file "LAB2src.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : B00/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       2       0       0       0
   423 ;;      Totals:         0       2       0       0       0
   424 ;;Total ram usage:        2 bytes
   425 ;; Hardware stack levels required when called:    2
   426 ;; This function calls:
   427 ;;		_getADC
   428 ;;		_setup
   429 ;;		_seven_seg
   430 ;; This function is called by:
   431 ;;		Startup code after reset
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           
   436                           ;psect for function _main
   437  00CD                     _main:
   438  00CD                     l1058:	
   439                           ;incstack = 0
   440                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   441                           
   442                           
   443                           ;LAB2src.c: 87:         }
   444  00CD  120A  118A  216B  120A  118A  	fcall	_setup
   445  00D2                     l1060:
   446                           
   447                           ;LAB2src.c: 88: 
   448  00D2  30C7               	movlw	199
   449  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   450  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   451  00D5  00A0               	movwf	??_main
   452  00D6                     u447:
   453  00D6  28D7               	nop2
   454  00D7  0BA0               	decfsz	??_main,f
   455  00D8  28D6               	goto	u447
   456  00D9  28DA               	nop2
   457  00DA                     l1062:
   458                           
   459                           ;LAB2src.c: 89:         if (multiplex == 1){
   460  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   461  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   462  00DC  149F               	bsf	31,1	;volatile
   463  00DD                     l1064:
   464                           
   465                           ;LAB2src.c: 94:             PORTCbits.RC0 = 0;
   466  00DD  0376               	decf	_check0,w
   467  00DE  1D03               	btfss	3,2
   468  00DF  28E1               	goto	u311
   469  00E0  28E2               	goto	u310
   470  00E1                     u311:
   471  00E1  28E7               	goto	l1070
   472  00E2                     u310:
   473  00E2                     l1066:
   474  00E2  1805               	btfsc	5,0	;volatile
   475  00E3  28E5               	goto	u321
   476  00E4  28E6               	goto	u320
   477  00E5                     u321:
   478  00E5  28E7               	goto	l1070
   479  00E6                     u320:
   480  00E6                     l1068:
   481                           
   482                           ;LAB2src.c: 95:         }
   483  00E6  01F6               	clrf	_check0
   484  00E7                     l1070:
   485                           
   486                           ;LAB2src.c: 97:         if (ADCresult >= PORTD ){
   487  00E7  0375               	decf	_check1,w
   488  00E8  1D03               	btfss	3,2
   489  00E9  28EB               	goto	u331
   490  00EA  28EC               	goto	u330
   491  00EB                     u331:
   492  00EB  28F1               	goto	l1076
   493  00EC                     u330:
   494  00EC                     l1072:
   495  00EC  1885               	btfsc	5,1	;volatile
   496  00ED  28EF               	goto	u341
   497  00EE  28F0               	goto	u340
   498  00EF                     u341:
   499  00EF  28F1               	goto	l1076
   500  00F0                     u340:
   501  00F0                     l1074:
   502                           
   503                           ;LAB2src.c: 98:             PORTCbits.RC1 = 1;
   504  00F0  01F5               	clrf	_check1
   505  00F1                     l1076:
   506                           
   507                           ;LAB2src.c: 101:         else{
   508  00F1  1C05               	btfss	5,0	;volatile
   509  00F2  28F4               	goto	u351
   510  00F3  28F5               	goto	u350
   511  00F4                     u351:
   512  00F4  28FF               	goto	l1084
   513  00F5                     u350:
   514  00F5                     l1078:
   515  00F5  0876               	movf	_check0,w
   516  00F6  1D03               	btfss	3,2
   517  00F7  28F9               	goto	u361
   518  00F8  28FA               	goto	u360
   519  00F9                     u361:
   520  00F9  28FF               	goto	l1084
   521  00FA                     u360:
   522  00FA                     l1080:
   523                           
   524                           ;LAB2src.c: 102:             PORTCbits.RC1 = 0;
   525  00FA  01F6               	clrf	_check0
   526  00FB  0AF6               	incf	_check0,f
   527  00FC                     l1082:
   528                           
   529                           ;LAB2src.c: 103:         }
   530  00FC  0808               	movf	8,w	;volatile
   531  00FD  3E01               	addlw	1
   532  00FE  0088               	movwf	8	;volatile
   533  00FF                     l1084:
   534                           
   535                           ;LAB2src.c: 106: 
   536  00FF  1C85               	btfss	5,1	;volatile
   537  0100  2902               	goto	u371
   538  0101  2903               	goto	u370
   539  0102                     u371:
   540  0102  290D               	goto	l81
   541  0103                     u370:
   542  0103                     l1086:
   543  0103  0875               	movf	_check1,w
   544  0104  1D03               	btfss	3,2
   545  0105  2907               	goto	u381
   546  0106  2908               	goto	u380
   547  0107                     u381:
   548  0107  290D               	goto	l81
   549  0108                     u380:
   550  0108                     l1088:
   551                           
   552                           ;LAB2src.c: 107: 
   553  0108  01F5               	clrf	_check1
   554  0109  0AF5               	incf	_check1,f
   555  010A                     l1090:
   556                           
   557                           ;LAB2src.c: 108: }
   558  010A  0808               	movf	8,w	;volatile
   559  010B  3EFF               	addlw	255
   560  010C  0088               	movwf	8	;volatile
   561  010D                     l81:	
   562                           ;LAB2src.c: 109: 
   563                           
   564                           
   565                           ;LAB2src.c: 111: 
   566  010D  0374               	decf	_ADC,w
   567  010E  1D03               	btfss	3,2
   568  010F  2911               	goto	u391
   569  0110  2912               	goto	u390
   570  0111                     u391:
   571  0111  2928               	goto	l1100
   572  0112                     u390:
   573  0112                     l1092:
   574                           
   575                           ;LAB2src.c: 112: 
   576  0112  120A  118A  21D7  120A  118A  	fcall	_getADC
   577  0117  1283               	bcf	3,5	;RP0=0, select bank0
   578  0118  1303               	bcf	3,6	;RP1=0, select bank0
   579  0119  00A0               	movwf	??_main
   580  011A  0820               	movf	??_main,w
   581  011B  00F3               	movwf	_ADCresult
   582  011C                     l1094:
   583                           
   584                           ;LAB2src.c: 113: 
   585  011C  01F4               	clrf	_ADC
   586  011D                     l1096:
   587                           
   588                           ;LAB2src.c: 114: 
   589  011D  30C7               	movlw	199
   590  011E  1283               	bcf	3,5	;RP0=0, select bank0
   591  011F  1303               	bcf	3,6	;RP1=0, select bank0
   592  0120  00A0               	movwf	??_main
   593  0121                     u457:
   594  0121  2922               	nop2
   595  0122  0BA0               	decfsz	??_main,f
   596  0123  2921               	goto	u457
   597  0124  2925               	nop2
   598  0125                     l1098:
   599                           
   600                           ;LAB2src.c: 115: void setup(void) {
   601  0125  1283               	bcf	3,5	;RP0=0, select bank0
   602  0126  1303               	bcf	3,6	;RP1=0, select bank0
   603  0127  149F               	bsf	31,1	;volatile
   604  0128                     l1100:
   605                           
   606                           ;LAB2src.c: 118:     PORTD = 0;
   607  0128  0871               	movf	_multiplex,w
   608  0129  1D03               	btfss	3,2
   609  012A  292C               	goto	u401
   610  012B  292D               	goto	u400
   611  012C                     u401:
   612  012C  293D               	goto	l1110
   613  012D                     u400:
   614  012D                     l1102:
   615                           
   616                           ;LAB2src.c: 119: 
   617  012D  0873               	movf	_ADCresult,w
   618  012E  390F               	andlw	15
   619  012F  00A0               	movwf	??_main
   620  0130  0820               	movf	??_main,w
   621  0131  00F2               	movwf	_sevenval
   622  0132                     l1104:
   623                           
   624                           ;LAB2src.c: 120:     TRISA = 1;
   625  0132  0872               	movf	_sevenval,w
   626  0133  120A  118A  201D  120A  118A  	fcall	_seven_seg
   627  0138  1283               	bcf	3,5	;RP0=0, select bank0
   628  0139  1303               	bcf	3,6	;RP1=0, select bank0
   629  013A  0086               	movwf	6	;volatile
   630  013B                     l1106:
   631                           
   632                           ;LAB2src.c: 121:     ANSEL = 0;
   633  013B  1407               	bsf	7,0	;volatile
   634  013C                     l1108:
   635                           
   636                           ;LAB2src.c: 122: 
   637  013C  1386               	bcf	6,7	;volatile
   638  013D                     l1110:
   639                           
   640                           ;LAB2src.c: 125: 
   641  013D  0371               	decf	_multiplex,w
   642  013E  1D03               	btfss	3,2
   643  013F  2941               	goto	u411
   644  0140  2942               	goto	u410
   645  0141                     u411:
   646  0141  295E               	goto	l1122
   647  0142                     u410:
   648  0142                     l1112:
   649                           
   650                           ;LAB2src.c: 126:     TRISC = 0;
   651  0142  0873               	movf	_ADCresult,w
   652  0143  39F0               	andlw	240
   653  0144  00A0               	movwf	??_main
   654  0145  0820               	movf	??_main,w
   655  0146  00F2               	movwf	_sevenval
   656  0147                     l1114:
   657                           
   658                           ;LAB2src.c: 127: 
   659  0147  0872               	movf	_sevenval,w
   660  0148  00A0               	movwf	??_main
   661  0149  3004               	movlw	4
   662  014A                     u425:
   663  014A  1003               	clrc
   664  014B  0CA0               	rrf	??_main,f
   665  014C  3EFF               	addlw	-1
   666  014D  1D03               	skipz
   667  014E  294A               	goto	u425
   668  014F  0820               	movf	??_main,w
   669  0150  00A1               	movwf	??_main+1
   670  0151  0821               	movf	??_main+1,w
   671  0152  00F2               	movwf	_sevenval
   672  0153                     l1116:
   673                           
   674                           ;LAB2src.c: 128: 
   675  0153  0872               	movf	_sevenval,w
   676  0154  120A  118A  201D  120A  118A  	fcall	_seven_seg
   677  0159  1283               	bcf	3,5	;RP0=0, select bank0
   678  015A  1303               	bcf	3,6	;RP1=0, select bank0
   679  015B  0086               	movwf	6	;volatile
   680  015C                     l1118:
   681                           
   682                           ;LAB2src.c: 129:     check0 = 0;
   683  015C  1786               	bsf	6,7	;volatile
   684  015D                     l1120:
   685                           
   686                           ;LAB2src.c: 130:     check1 = 0;
   687  015D  1007               	bcf	7,0	;volatile
   688  015E                     l1122:
   689                           
   690                           ;LAB2src.c: 133:     PORTC = 0;
   691  015E  0808               	movf	8,w	;volatile
   692  015F  0273               	subwf	_ADCresult,w
   693  0160  1C03               	skipc
   694  0161  2963               	goto	u431
   695  0162  2964               	goto	u430
   696  0163                     u431:
   697  0163  2966               	goto	l85
   698  0164                     u430:
   699  0164                     l1124:
   700                           
   701                           ;LAB2src.c: 134: 
   702  0164  1487               	bsf	7,1	;volatile
   703                           
   704                           ;LAB2src.c: 135: 
   705  0165  28DD               	goto	l1064
   706  0166                     l85:	
   707                           ;LAB2src.c: 137:     ANSELbits.ANS2 = 1;
   708                           
   709                           
   710                           ;LAB2src.c: 138:     PORTAbits.RA2 = 0;
   711  0166  1087               	bcf	7,1	;volatile
   712  0167  28DD               	goto	l1064
   713  0168  120A  118A  280C   	ljmp	start
   714  016B                     __end_of_main:
   715                           
   716                           	psect	text1
   717  001D                     __ptext1:	
   718 ;; *************** function _seven_seg *****************
   719 ;; Defined at:
   720 ;;		line 13 in file "LAB2lib.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  sevenval        1    wreg     unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  sevenval        1    4[COMMON] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      unsigned char 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         1       0       0       0       0
   736 ;;      Temps:          2       0       0       0       0
   737 ;;      Totals:         3       0       0       0       0
   738 ;;Total ram usage:        3 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    1
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _seven_seg
   750  001D                     _seven_seg:
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in _seven_seg: [wreg-fsr0h+status,2+status,0]
   754                           ;seven_seg@sevenval stored from wreg
   755  001D  00FB               	movwf	seven_seg@sevenval
   756  001E                     l924:
   757                           
   758                           ;LAB2lib.c: 15:     switch(sevenval){
   759  001E  288F               	goto	l960
   760  001F                     l926:
   761                           
   762                           ;LAB2lib.c: 17:             sevenhex = 0b00111111;
   763  001F  303F               	movlw	63
   764  0020  00F9               	movwf	??_seven_seg
   765  0021  0879               	movf	??_seven_seg,w
   766  0022  1283               	bcf	3,5	;RP0=0, select bank0
   767  0023  1303               	bcf	3,6	;RP1=0, select bank0
   768  0024  00A2               	movwf	_sevenhex
   769                           
   770                           ;LAB2lib.c: 18:             break;
   771  0025  28C9               	goto	l962
   772  0026                     l928:
   773                           
   774                           ;LAB2lib.c: 21:             sevenhex = 0b00000110;
   775  0026  3006               	movlw	6
   776  0027  00F9               	movwf	??_seven_seg
   777  0028  0879               	movf	??_seven_seg,w
   778  0029  1283               	bcf	3,5	;RP0=0, select bank0
   779  002A  1303               	bcf	3,6	;RP1=0, select bank0
   780  002B  00A2               	movwf	_sevenhex
   781                           
   782                           ;LAB2lib.c: 22:             break;
   783  002C  28C9               	goto	l962
   784  002D                     l930:
   785                           
   786                           ;LAB2lib.c: 25:             sevenhex = 0b01011011;
   787  002D  305B               	movlw	91
   788  002E  00F9               	movwf	??_seven_seg
   789  002F  0879               	movf	??_seven_seg,w
   790  0030  1283               	bcf	3,5	;RP0=0, select bank0
   791  0031  1303               	bcf	3,6	;RP1=0, select bank0
   792  0032  00A2               	movwf	_sevenhex
   793                           
   794                           ;LAB2lib.c: 26:             break;
   795  0033  28C9               	goto	l962
   796  0034                     l932:
   797                           
   798                           ;LAB2lib.c: 29:             sevenhex = 0b01001111;
   799  0034  304F               	movlw	79
   800  0035  00F9               	movwf	??_seven_seg
   801  0036  0879               	movf	??_seven_seg,w
   802  0037  1283               	bcf	3,5	;RP0=0, select bank0
   803  0038  1303               	bcf	3,6	;RP1=0, select bank0
   804  0039  00A2               	movwf	_sevenhex
   805                           
   806                           ;LAB2lib.c: 30:             break;
   807  003A  28C9               	goto	l962
   808  003B                     l934:
   809                           
   810                           ;LAB2lib.c: 33:             sevenhex = 0b01100110;
   811  003B  3066               	movlw	102
   812  003C  00F9               	movwf	??_seven_seg
   813  003D  0879               	movf	??_seven_seg,w
   814  003E  1283               	bcf	3,5	;RP0=0, select bank0
   815  003F  1303               	bcf	3,6	;RP1=0, select bank0
   816  0040  00A2               	movwf	_sevenhex
   817                           
   818                           ;LAB2lib.c: 34:             break;
   819  0041  28C9               	goto	l962
   820  0042                     l936:
   821                           
   822                           ;LAB2lib.c: 37:             sevenhex = 0b01101101;
   823  0042  306D               	movlw	109
   824  0043  00F9               	movwf	??_seven_seg
   825  0044  0879               	movf	??_seven_seg,w
   826  0045  1283               	bcf	3,5	;RP0=0, select bank0
   827  0046  1303               	bcf	3,6	;RP1=0, select bank0
   828  0047  00A2               	movwf	_sevenhex
   829                           
   830                           ;LAB2lib.c: 38:             break;
   831  0048  28C9               	goto	l962
   832  0049                     l938:
   833                           
   834                           ;LAB2lib.c: 41:             sevenhex = 0b01111101;
   835  0049  307D               	movlw	125
   836  004A  00F9               	movwf	??_seven_seg
   837  004B  0879               	movf	??_seven_seg,w
   838  004C  1283               	bcf	3,5	;RP0=0, select bank0
   839  004D  1303               	bcf	3,6	;RP1=0, select bank0
   840  004E  00A2               	movwf	_sevenhex
   841                           
   842                           ;LAB2lib.c: 42:             break;
   843  004F  28C9               	goto	l962
   844  0050                     l940:
   845                           
   846                           ;LAB2lib.c: 45:             sevenhex = 0b00000111;
   847  0050  3007               	movlw	7
   848  0051  00F9               	movwf	??_seven_seg
   849  0052  0879               	movf	??_seven_seg,w
   850  0053  1283               	bcf	3,5	;RP0=0, select bank0
   851  0054  1303               	bcf	3,6	;RP1=0, select bank0
   852  0055  00A2               	movwf	_sevenhex
   853                           
   854                           ;LAB2lib.c: 46:             break;
   855  0056  28C9               	goto	l962
   856  0057                     l942:
   857                           
   858                           ;LAB2lib.c: 49:             sevenhex = 0b01111111;
   859  0057  307F               	movlw	127
   860  0058  00F9               	movwf	??_seven_seg
   861  0059  0879               	movf	??_seven_seg,w
   862  005A  1283               	bcf	3,5	;RP0=0, select bank0
   863  005B  1303               	bcf	3,6	;RP1=0, select bank0
   864  005C  00A2               	movwf	_sevenhex
   865                           
   866                           ;LAB2lib.c: 50:             break;
   867  005D  28C9               	goto	l962
   868  005E                     l944:
   869                           
   870                           ;LAB2lib.c: 53:             sevenhex = 0b01100111;
   871  005E  3067               	movlw	103
   872  005F  00F9               	movwf	??_seven_seg
   873  0060  0879               	movf	??_seven_seg,w
   874  0061  1283               	bcf	3,5	;RP0=0, select bank0
   875  0062  1303               	bcf	3,6	;RP1=0, select bank0
   876  0063  00A2               	movwf	_sevenhex
   877                           
   878                           ;LAB2lib.c: 54:             break;
   879  0064  28C9               	goto	l962
   880  0065                     l946:
   881                           
   882                           ;LAB2lib.c: 57:             sevenhex = 0b01110111;
   883  0065  3077               	movlw	119
   884  0066  00F9               	movwf	??_seven_seg
   885  0067  0879               	movf	??_seven_seg,w
   886  0068  1283               	bcf	3,5	;RP0=0, select bank0
   887  0069  1303               	bcf	3,6	;RP1=0, select bank0
   888  006A  00A2               	movwf	_sevenhex
   889                           
   890                           ;LAB2lib.c: 58:             break;
   891  006B  28C9               	goto	l962
   892  006C                     l948:
   893                           
   894                           ;LAB2lib.c: 61:             sevenhex = 0b01111100;
   895  006C  307C               	movlw	124
   896  006D  00F9               	movwf	??_seven_seg
   897  006E  0879               	movf	??_seven_seg,w
   898  006F  1283               	bcf	3,5	;RP0=0, select bank0
   899  0070  1303               	bcf	3,6	;RP1=0, select bank0
   900  0071  00A2               	movwf	_sevenhex
   901                           
   902                           ;LAB2lib.c: 62:             break;
   903  0072  28C9               	goto	l962
   904  0073                     l950:
   905                           
   906                           ;LAB2lib.c: 65:             sevenhex = 0b00111001;
   907  0073  3039               	movlw	57
   908  0074  00F9               	movwf	??_seven_seg
   909  0075  0879               	movf	??_seven_seg,w
   910  0076  1283               	bcf	3,5	;RP0=0, select bank0
   911  0077  1303               	bcf	3,6	;RP1=0, select bank0
   912  0078  00A2               	movwf	_sevenhex
   913                           
   914                           ;LAB2lib.c: 66:             break;
   915  0079  28C9               	goto	l962
   916  007A                     l952:
   917                           
   918                           ;LAB2lib.c: 69:             sevenhex = 0b01011110;
   919  007A  305E               	movlw	94
   920  007B  00F9               	movwf	??_seven_seg
   921  007C  0879               	movf	??_seven_seg,w
   922  007D  1283               	bcf	3,5	;RP0=0, select bank0
   923  007E  1303               	bcf	3,6	;RP1=0, select bank0
   924  007F  00A2               	movwf	_sevenhex
   925                           
   926                           ;LAB2lib.c: 70:             break;
   927  0080  28C9               	goto	l962
   928  0081                     l954:
   929                           
   930                           ;LAB2lib.c: 73:             sevenhex = 0b01111001;
   931  0081  3079               	movlw	121
   932  0082  00F9               	movwf	??_seven_seg
   933  0083  0879               	movf	??_seven_seg,w
   934  0084  1283               	bcf	3,5	;RP0=0, select bank0
   935  0085  1303               	bcf	3,6	;RP1=0, select bank0
   936  0086  00A2               	movwf	_sevenhex
   937                           
   938                           ;LAB2lib.c: 74:             break;
   939  0087  28C9               	goto	l962
   940  0088                     l956:
   941                           
   942                           ;LAB2lib.c: 77:             sevenhex = 0b01110001;
   943  0088  3071               	movlw	113
   944  0089  00F9               	movwf	??_seven_seg
   945  008A  0879               	movf	??_seven_seg,w
   946  008B  1283               	bcf	3,5	;RP0=0, select bank0
   947  008C  1303               	bcf	3,6	;RP1=0, select bank0
   948  008D  00A2               	movwf	_sevenhex
   949                           
   950                           ;LAB2lib.c: 78:             break;
   951  008E  28C9               	goto	l962
   952  008F                     l960:
   953  008F  087B               	movf	seven_seg@sevenval,w
   954  0090  00F9               	movwf	??_seven_seg
   955  0091  01FA               	clrf	??_seven_seg+1
   956                           
   957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   958                           ; Switch size 1, requested type "simple"
   959                           ; Number of cases is 1, Range of values is 0 to 0
   960                           ; switch strategies available:
   961                           ; Name         Instructions Cycles
   962                           ; simple_byte            4     3 (average)
   963                           ; direct_byte           11     8 (fixed)
   964                           ; jumptable            260     6 (fixed)
   965                           ;	Chosen strategy is simple_byte
   966  0092  087A               	movf	??_seven_seg+1,w
   967  0093  3A00               	xorlw	0	; case 0
   968  0094  1903               	skipnz
   969  0095  2897               	goto	l1146
   970  0096  28C9               	goto	l962
   971  0097                     l1146:
   972                           
   973                           ; Switch size 1, requested type "simple"
   974                           ; Number of cases is 16, Range of values is 0 to 15
   975                           ; switch strategies available:
   976                           ; Name         Instructions Cycles
   977                           ; simple_byte           49    25 (average)
   978                           ; direct_byte           56     8 (fixed)
   979                           ; jumptable            260     6 (fixed)
   980                           ;	Chosen strategy is simple_byte
   981  0097  0879               	movf	??_seven_seg,w
   982  0098  3A00               	xorlw	0	; case 0
   983  0099  1903               	skipnz
   984  009A  281F               	goto	l926
   985  009B  3A01               	xorlw	1	; case 1
   986  009C  1903               	skipnz
   987  009D  2826               	goto	l928
   988  009E  3A03               	xorlw	3	; case 2
   989  009F  1903               	skipnz
   990  00A0  282D               	goto	l930
   991  00A1  3A01               	xorlw	1	; case 3
   992  00A2  1903               	skipnz
   993  00A3  2834               	goto	l932
   994  00A4  3A07               	xorlw	7	; case 4
   995  00A5  1903               	skipnz
   996  00A6  283B               	goto	l934
   997  00A7  3A01               	xorlw	1	; case 5
   998  00A8  1903               	skipnz
   999  00A9  2842               	goto	l936
  1000  00AA  3A03               	xorlw	3	; case 6
  1001  00AB  1903               	skipnz
  1002  00AC  2849               	goto	l938
  1003  00AD  3A01               	xorlw	1	; case 7
  1004  00AE  1903               	skipnz
  1005  00AF  2850               	goto	l940
  1006  00B0  3A0F               	xorlw	15	; case 8
  1007  00B1  1903               	skipnz
  1008  00B2  2857               	goto	l942
  1009  00B3  3A01               	xorlw	1	; case 9
  1010  00B4  1903               	skipnz
  1011  00B5  285E               	goto	l944
  1012  00B6  3A03               	xorlw	3	; case 10
  1013  00B7  1903               	skipnz
  1014  00B8  2865               	goto	l946
  1015  00B9  3A01               	xorlw	1	; case 11
  1016  00BA  1903               	skipnz
  1017  00BB  286C               	goto	l948
  1018  00BC  3A07               	xorlw	7	; case 12
  1019  00BD  1903               	skipnz
  1020  00BE  2873               	goto	l950
  1021  00BF  3A01               	xorlw	1	; case 13
  1022  00C0  1903               	skipnz
  1023  00C1  287A               	goto	l952
  1024  00C2  3A03               	xorlw	3	; case 14
  1025  00C3  1903               	skipnz
  1026  00C4  2881               	goto	l954
  1027  00C5  3A01               	xorlw	1	; case 15
  1028  00C6  1903               	skipnz
  1029  00C7  2888               	goto	l956
  1030  00C8  28C9               	goto	l962
  1031  00C9                     l962:
  1032                           
  1033                           ;LAB2lib.c: 81:     return sevenhex;
  1034  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1035  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1036  00CB  0822               	movf	_sevenhex,w
  1037  00CC                     l122:
  1038  00CC  0008               	return
  1039  00CD                     __end_of_seven_seg:
  1040                           
  1041                           	psect	text2
  1042  016B                     __ptext2:	
  1043 ;; *************** function _setup *****************
  1044 ;; Defined at:
  1045 ;;		line 151 in file "LAB2src.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _setup
  1075  016B                     _setup:
  1076  016B                     l714:	
  1077                           ;incstack = 0
  1078                           ; Regs used in _setup: [wreg+status,2+status,0]
  1079                           
  1080                           
  1081                           ;LAB2src.c: 153:     OPTION_REGbits.T0CS = 0;
  1082  016B  1683               	bsf	3,5	;RP0=1, select bank1
  1083  016C  1303               	bcf	3,6	;RP1=0, select bank1
  1084  016D  0188               	clrf	8	;volatile
  1085                           
  1086                           ;LAB2src.c: 154:     OPTION_REGbits.PS = 0b100;
  1087  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1088  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0170  0188               	clrf	8	;volatile
  1090  0171                     l716:
  1091                           
  1092                           ;LAB2src.c: 156:     INTCONbits.T0IE = 1;
  1093  0171  3001               	movlw	1
  1094  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1095  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1096  0174  0085               	movwf	5	;volatile
  1097  0175                     l718:
  1098                           
  1099                           ;LAB2src.c: 157:     TMR0 = 0;
  1100  0175  1683               	bsf	3,5	;RP0=1, select bank3
  1101  0176  1703               	bsf	3,6	;RP1=1, select bank3
  1102  0177  0188               	clrf	8	;volatile
  1103  0178                     l720:
  1104                           
  1105                           ;LAB2src.c: 159: }
  1106  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1107  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1108  017A  0186               	clrf	6	;volatile
  1109  017B                     l722:
  1110  017B  1683               	bsf	3,5	;RP0=1, select bank3
  1111  017C  1703               	bsf	3,6	;RP1=1, select bank3
  1112  017D  0189               	clrf	9	;volatile
  1113  017E                     l724:
  1114  017E  1683               	bsf	3,5	;RP0=1, select bank1
  1115  017F  1303               	bcf	3,6	;RP1=0, select bank1
  1116  0180  0187               	clrf	7	;volatile
  1117  0181                     l726:
  1118  0181  01F6               	clrf	_check0
  1119  0182                     l728:
  1120  0182  01F5               	clrf	_check1
  1121  0183                     l730:
  1122  0183  01F4               	clrf	_ADC
  1123  0184                     l732:
  1124  0184  01F1               	clrf	_multiplex
  1125  0185                     l734:
  1126  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0187  0187               	clrf	7	;volatile
  1129  0188                     l736:
  1130  0188  1683               	bsf	3,5	;RP0=1, select bank3
  1131  0189  1703               	bsf	3,6	;RP1=1, select bank3
  1132  018A  1508               	bsf	8,2	;volatile
  1133  018B                     l738:
  1134  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1135  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1136  018D  1105               	bcf	5,2	;volatile
  1137  018E                     l740:
  1138  018E  081F               	movf	31,w	;volatile
  1139  018F  393F               	andlw	-193
  1140  0190  3840               	iorlw	64
  1141  0191  009F               	movwf	31	;volatile
  1142  0192                     l742:
  1143  0192  1683               	bsf	3,5	;RP0=1, select bank1
  1144  0193  1303               	bcf	3,6	;RP1=0, select bank1
  1145  0194  121F               	bcf	31,4	;volatile
  1146  0195                     l744:
  1147  0195  129F               	bcf	31,5	;volatile
  1148  0196                     l746:
  1149  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0198  081F               	movf	31,w	;volatile
  1152  0199  39C3               	andlw	-61
  1153  019A  3808               	iorlw	8
  1154  019B  009F               	movwf	31	;volatile
  1155  019C                     l748:
  1156  019C  1683               	bsf	3,5	;RP0=1, select bank1
  1157  019D  1303               	bcf	3,6	;RP1=0, select bank1
  1158  019E  139F               	bcf	31,7	;volatile
  1159  019F                     l750:
  1160  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1161  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1162  01A1  141F               	bsf	31,0	;volatile
  1163  01A2                     l752:
  1164  01A2  130C               	bcf	12,6	;volatile
  1165  01A3                     l754:
  1166  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1167  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1168  01A5  170C               	bsf	12,6	;volatile
  1169  01A6                     l756:
  1170  01A6  170B               	bsf	11,6	;volatile
  1171  01A7                     l758:
  1172  01A7  178B               	bsf	11,7	;volatile
  1173  01A8                     l760:
  1174  01A8  1181               	bcf	1,3	;volatile
  1175  01A9                     l762:
  1176  01A9  1281               	bcf	1,5	;volatile
  1177  01AA                     l764:
  1178  01AA  0801               	movf	1,w	;volatile
  1179  01AB  39F8               	andlw	-8
  1180  01AC  3804               	iorlw	4
  1181  01AD  0081               	movwf	1	;volatile
  1182  01AE                     l766:
  1183  01AE  110B               	bcf	11,2	;volatile
  1184  01AF                     l768:
  1185  01AF  168B               	bsf	11,5	;volatile
  1186  01B0                     l770:
  1187  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1188  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1189  01B2  0181               	clrf	1	;volatile
  1190  01B3                     l92:
  1191  01B3  0008               	return
  1192  01B4                     __end_of_setup:
  1193                           
  1194                           	psect	text3
  1195  01D7                     __ptext3:	
  1196 ;; *************** function _getADC *****************
  1197 ;; Defined at:
  1198 ;;		line 7 in file "LAB2lib.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      unsigned char 
  1205 ;; Registers used:
  1206 ;;		wreg
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          1       0       0       0       0
  1215 ;;      Totals:         1       0       0       0       0
  1216 ;;Total ram usage:        1 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _getADC
  1228  01D7                     _getADC:
  1229  01D7                     l772:	
  1230                           ;incstack = 0
  1231                           ; Regs used in _getADC: [wreg]
  1232                           
  1233                           
  1234                           ;LAB2lib.c: 9:     ADCvalue = ADRESH;
  1235  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1236  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1237  01D9  081E               	movf	30,w	;volatile
  1238  01DA  00F9               	movwf	??_getADC
  1239  01DB  0879               	movf	??_getADC,w
  1240  01DC  00F0               	movwf	_ADCvalue
  1241                           
  1242                           ;LAB2lib.c: 10:     return ADCvalue;
  1243  01DD  0870               	movf	_ADCvalue,w
  1244  01DE                     l101:
  1245  01DE  0008               	return
  1246  01DF                     __end_of_getADC:
  1247                           
  1248                           	psect	text4
  1249  01B4                     __ptext4:	
  1250 ;; *************** function _ISR *****************
  1251 ;; Defined at:
  1252 ;;		line 62 in file "LAB2src.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          2       0       0       0       0
  1269 ;;      Totals:         2       0       0       0       0
  1270 ;;Total ram usage:        2 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		Interrupt level 1
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           
  1280                           ;psect for function _ISR
  1281  01B4                     _ISR:
  1282  01B4                     i1l822:
  1283                           
  1284                           ;LAB2src.c: 63:         }
  1285  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1286  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1287  01B6  1F0C               	btfss	12,6	;volatile
  1288  01B7  29B9               	goto	u1_21
  1289  01B8  29BA               	goto	u1_20
  1290  01B9                     u1_21:
  1291  01B9  29BD               	goto	i1l67
  1292  01BA                     u1_20:
  1293  01BA                     i1l824:
  1294                           
  1295                           ;LAB2src.c: 64: 
  1296  01BA  130C               	bcf	12,6	;volatile
  1297                           
  1298                           ;LAB2src.c: 65:         if (PORTAbits.RA0 == 1 && check0 == 0){
  1299  01BB  01F4               	clrf	_ADC
  1300  01BC  0AF4               	incf	_ADC,f
  1301  01BD                     i1l67:	
  1302                           ;LAB2src.c: 66:             check0 = 1;
  1303                           
  1304                           
  1305                           ;LAB2src.c: 68:         }
  1306  01BD  1D0B               	btfss	11,2	;volatile
  1307  01BE  29C0               	goto	u2_21
  1308  01BF  29C1               	goto	u2_20
  1309  01C0                     u2_21:
  1310  01C0  29D0               	goto	i1l72
  1311  01C1                     u2_20:
  1312  01C1                     i1l826:
  1313                           
  1314                           ;LAB2src.c: 69: 
  1315  01C1  110B               	bcf	11,2	;volatile
  1316  01C2                     i1l828:
  1317                           
  1318                           ;LAB2src.c: 70:         if (PORTAbits.RA1 == 1 && check1 == 0){
  1319  01C2  0871               	movf	_multiplex,w
  1320  01C3  1D03               	btfss	3,2
  1321  01C4  29C6               	goto	u3_21
  1322  01C5  29C7               	goto	u3_20
  1323  01C6                     u3_21:
  1324  01C6  29CA               	goto	i1l832
  1325  01C7                     u3_20:
  1326  01C7                     i1l830:
  1327                           
  1328                           ;LAB2src.c: 71:             check1 = 1;
  1329  01C7  01F1               	clrf	_multiplex
  1330  01C8  0AF1               	incf	_multiplex,f
  1331                           
  1332                           ;LAB2src.c: 72:             PORTD = PORTD - 1;
  1333  01C9  29D0               	goto	i1l72
  1334  01CA                     i1l832:
  1335  01CA  0371               	decf	_multiplex,w
  1336  01CB  1D03               	btfss	3,2
  1337  01CC  29CE               	goto	u4_21
  1338  01CD  29CF               	goto	u4_20
  1339  01CE                     u4_21:
  1340  01CE  29D0               	goto	i1l72
  1341  01CF                     u4_20:
  1342  01CF                     i1l834:
  1343                           
  1344                           ;LAB2src.c: 75:         if (ADC == 1){
  1345  01CF  01F1               	clrf	_multiplex
  1346  01D0                     i1l72:
  1347  01D0  0878               	movf	??_ISR+1,w
  1348  01D1  008A               	movwf	10
  1349  01D2  0E77               	swapf	??_ISR,w
  1350  01D3  0083               	movwf	3
  1351  01D4  0EFE               	swapf	btemp,f
  1352  01D5  0E7E               	swapf	btemp,w
  1353  01D6  0009               	retfie
  1354  01D7                     __end_of_ISR:
  1355  007E                     btemp	set	126	;btemp
  1356  007E                     wtemp0	set	126
  1357                           
  1358                           	psect	intentry
  1359  0004                     __pintentry:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1362                           
  1363  0004                     interrupt_function:
  1364  007E                     saved_w	set	btemp
  1365  0004  00FE               	movwf	btemp
  1366  0005  0E03               	swapf	3,w
  1367  0006  00F7               	movwf	??_ISR
  1368  0007  080A               	movf	10,w
  1369  0008  00F8               	movwf	??_ISR+1
  1370  0009  120A  118A  29B4   	ljmp	_ISR
  1371                           
  1372                           	psect	config
  1373                           
  1374                           ;Config register CONFIG1 @ 0x2007
  1375                           ;	Oscillator Selection bits
  1376                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1377                           ;	Watchdog Timer Enable bit
  1378                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1379                           ;	Power-up Timer Enable bit
  1380                           ;	PWRTE = OFF, PWRT disabled
  1381                           ;	RE3/MCLR pin function select bit
  1382                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1383                           ;	Code Protection bit
  1384                           ;	CP = OFF, Program memory code protection is disabled
  1385                           ;	Data Code Protection bit
  1386                           ;	CPD = OFF, Data memory code protection is disabled
  1387                           ;	Brown Out Reset Selection bits
  1388                           ;	BOREN = OFF, BOR disabled
  1389                           ;	Internal External Switchover bit
  1390                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1391                           ;	Fail-Safe Clock Monitor Enabled bit
  1392                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1393                           ;	Low Voltage Programming Enable bit
  1394                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1395                           ;	In-Circuit Debugger Mode bit
  1396                           ;	DEBUG = 0x1, unprogrammed default
  1397  2007                     	org	8199
  1398  2007  20F4               	dw	8436
  1399                           
  1400                           ;Config register CONFIG2 @ 0x2008
  1401                           ;	Brown-out Reset Selection bit
  1402                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1403                           ;	Flash Program Memory Self Write Enable bits
  1404                           ;	WRT = OFF, Write protection off
  1405  2008                     	org	8200
  1406  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_seven_seg

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      22
                                              0 BANK0      2     2      0
                             _getADC
                              _setup
                          _seven_seg
 ---------------------------------------------------------------------------------
 (1) _seven_seg                                            3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getADC                                               1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getADC
   _setup
   _seven_seg

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 12:56:54 2021

                     l81 010D                       l92 01B3                       l85 0166  
                    l101 01DE                      l122 00CC                      _ADC 0074  
                    l720 0178                      l730 0183                      l722 017B  
                    l714 016B                      l740 018E                      l732 0184  
                    l724 017E                      l716 0171                      l750 019F  
                    l742 0192                      l734 0185                      l726 0181  
                    l718 0175                      l760 01A8                      l752 01A2  
                    l744 0195                      l736 0188                      l728 0182  
                    l770 01B0                      l762 01A9                      l754 01A3  
                    l746 0196                      l738 018B                      l930 002D  
                    l772 01D7                      l764 01AA                      l756 01A6  
                    l748 019C                      l940 0050                      l932 0034  
                    l924 001E                      l766 01AE                      l758 01A7  
                    l950 0073                      l942 0057                      l934 003B  
                    l926 001F                      l768 01AF                      l952 007A  
                    l944 005E                      l936 0042                      l928 0026  
                    l960 008F                      l954 0081                      l946 0065  
                    l938 0049                      l962 00C9                      l956 0088  
                    l948 006C                      u310 00E2                      u311 00E1  
                    u400 012D                      u320 00E6                      u401 012C  
                    u321 00E5                      u410 0142                      u330 00EC  
                    u411 0141                      u331 00EB                      u340 00F0  
                    u341 00EF                      u430 0164                      u350 00F5  
                    u431 0163                      u351 00F4                      u360 00FA  
                    u425 014A                      u361 00F9                      u370 0103  
                    u371 0102                      u380 0108                      _ISR 01B4  
                    u381 0107                      u390 0112                      u391 0111  
                    u447 00D6                      u457 0121                     ?_ISR 0077  
                   l1100 0128                     l1102 012D                     l1110 013D  
                   l1120 015D                     l1112 0142                     l1104 0132  
                   l1114 0147                     l1122 015E                     l1106 013B  
                   l1124 0164                     l1116 0153                     l1108 013C  
                   l1060 00D2                     l1118 015C                     l1070 00E7  
                   l1062 00DA                     l1080 00FA                     l1072 00EC  
                   l1064 00DD                     l1146 0097                     l1090 010A  
                   l1082 00FC                     l1074 00F0                     l1066 00E2  
                   l1058 00CD                     l1092 0112                     l1084 00FF  
                   l1076 00F1                     l1068 00E6                     l1094 011C  
                   l1086 0103                     l1078 00F5                     l1096 011D  
                   l1088 0108                     l1098 0125                     i1l72 01D0  
                   i1l67 01BD                     _TMR0 0001                     u1_20 01BA  
                   u1_21 01B9                     u2_20 01C1                     u2_21 01C0  
                   u3_20 01C7                     u3_21 01C6                     u4_20 01CF  
                   u4_21 01CE                     _main 00CD                     btemp 007E  
                   start 000C                    ??_ISR 0077                    ?_main 0077  
                  _ANSEL 0188                    i1l830 01C7                    i1l822 01B4  
                  i1l832 01CA                    i1l824 01BA                    i1l834 01CF  
                  i1l826 01C1                    i1l828 01C2                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _setup 016B                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 016B  
                 ??_main 0020                   _ADRESH 001E                   ?_setup 0077  
                 _ANSELH 0189                   _check0 0076                   _check1 0075  
                 _getADC 01D7                   saved_w 007E  __end_of__initialization 0019  
         __pcstackCOMMON 0077            __end_of_setup 01B4           _OPTION_REGbits 0081  
                ??_setup 0079               __pbssBANK0 0022               __pmaintext 00CD  
                ?_getADC 0077               __pintentry 0004       __size_of_seven_seg 00B0  
        __size_of_getADC 0008        seven_seg@sevenval 007B                _ADCresult 0073  
              _ANSELbits 0188                  __ptext1 001D                  __ptext2 016B  
                __ptext3 01D7                  __ptext4 01B4             __size_of_ISR 0023  
   end_of_initialization 0019        __end_of_seven_seg 00CD                _PORTAbits 0005  
              _PORTBbits 0006                _PORTCbits 0007           __end_of_getADC 01DF  
    start_initialization 000F              __end_of_ISR 01D7                 ??_getADC 0079  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0020  
               _ADCvalue 0070           __size_of_setup 0049        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C                _seven_seg 001D  
              _multiplex 0071               _ADCON0bits 001F               _ADCON1bits 009F  
             ?_seven_seg 0077            __size_of_main 009E                 _sevenhex 0022  
               _sevenval 0072               _INTCONbits 000B                 intlevel1 0000  
            ??_seven_seg 0079  
