

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 23:29:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001E                     _ADRESH	set	30
   285  0001                     _TMR0	set	1
   286  0006                     _PORTBbits	set	6
   287  0006                     _PORTB	set	6
   288  0008                     _PORTD	set	8
   289  0005                     _PORTAbits	set	5
   290  001F                     _ADCON0bits	set	31
   291  000B                     _INTCONbits	set	11
   292  000C                     _PIR1bits	set	12
   293  0081                     _OPTION_REGbits	set	129
   294  008C                     _PIE1bits	set	140
   295  009F                     _ADCON1bits	set	159
   296  0086                     _TRISB	set	134
   297  0085                     _TRISA	set	133
   298  0088                     _TRISD	set	136
   299  0188                     _ANSELbits	set	392
   300  0189                     _ANSELH	set	393
   301  0188                     _ANSEL	set	392
   302                           
   303                           	psect	cinit
   304  000F                     start_initialization:	
   305                           ; #config settings
   306                           
   307  000F                     __initialization:
   308                           
   309                           ; Clear objects allocated to COMMON
   310  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   311  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   312  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   313  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   314  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   315  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   316  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   317  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   318  0017                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0017                     __end_of__initialization:
   322  0017  0183               	clrf	3
   323  0018  120A  118A  28A9   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0070                     __pbssCOMMON:
   327  0070                     _sevenhex:
   328  0070                     	ds	1
   329  0071                     _ADCvalue:
   330  0071                     	ds	1
   331  0072                     _multiplex:
   332  0072                     	ds	1
   333  0073                     _sevenval:
   334  0073                     	ds	1
   335  0074                     _ADCresult:
   336  0074                     	ds	1
   337  0075                     _ADC:
   338  0075                     	ds	1
   339  0076                     _check1:
   340  0076                     	ds	1
   341  0077                     _check0:
   342  0077                     	ds	1
   343                           
   344                           	psect	cstackCOMMON
   345  0078                     __pcstackCOMMON:
   346  0078                     ?_setup:
   347  0078                     ?_getADC:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0078                     ?_seven_seg:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0078                     ?_ISR:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0078                     ??_ISR:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0078                     ?_main:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364  0078                     	ds	2
   365  007A                     ??_setup:
   366  007A                     ??_getADC:	
   367                           ; 1 bytes @ 0x2
   368                           
   369  007A                     ??_seven_seg:	
   370                           ; 1 bytes @ 0x2
   371                           
   372                           
   373                           ; 1 bytes @ 0x2
   374  007A                     	ds	2
   375  007C                     seven_seg@sevenval:
   376                           
   377                           ; 1 bytes @ 0x4
   378  007C                     	ds	1
   379  007D                     ??_main:
   380                           
   381                           ; 1 bytes @ 0x5
   382  007D                     	ds	1
   383                           
   384                           	psect	maintext
   385  00A9                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 86 in file "LAB2src.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          1       0       0       0       0
   408 ;;      Totals:         1       0       0       0       0
   409 ;;Total ram usage:        1 bytes
   410 ;; Hardware stack levels required when called:    2
   411 ;; This function calls:
   412 ;;		_getADC
   413 ;;		_setup
   414 ;;		_seven_seg
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _main
   422  00A9                     _main:
   423  00A9                     l823:	
   424                           ;incstack = 0
   425                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   426                           
   427                           
   428                           ;LAB2src.c: 87:         if (multiplex == 1){
   429  00A9  120A  118A  212B  120A  118A  	fcall	_setup
   430  00AE                     l825:
   431                           
   432                           ;LAB2src.c: 88:             sevenval = ADCresult & 0b00001111;
   433  00AE  30C7               	movlw	199
   434  00AF  00FD               	movwf	??_main
   435  00B0                     u167:
   436  00B0  28B1               	nop2
   437  00B1  0BFD               	decfsz	??_main,f
   438  00B2  28B0               	goto	u167
   439  00B3  28B4               	nop2
   440  00B4  28B5               	nop2
   441  00B5                     l827:
   442                           
   443                           ;LAB2src.c: 89:             PORTB = seven_seg(sevenval);
   444  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   445  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   446  00B7  149F               	bsf	31,1	;volatile
   447  00B8                     l829:
   448                           
   449                           ;LAB2src.c: 94: 
   450  00B8  0377               	decf	_check0,w
   451  00B9  1D03               	btfss	3,2
   452  00BA  28BC               	goto	u51
   453  00BB  28BD               	goto	u50
   454  00BC                     u51:
   455  00BC  28C2               	goto	l835
   456  00BD                     u50:
   457  00BD                     l831:
   458  00BD  1805               	btfsc	5,0	;volatile
   459  00BE  28C0               	goto	u61
   460  00BF  28C1               	goto	u60
   461  00C0                     u61:
   462  00C0  28C2               	goto	l835
   463  00C1                     u60:
   464  00C1                     l833:
   465                           
   466                           ;LAB2src.c: 95: 
   467  00C1  01F7               	clrf	_check0
   468  00C2                     l835:
   469                           
   470                           ;LAB2src.c: 97: 
   471  00C2  0376               	decf	_check1,w
   472  00C3  1D03               	btfss	3,2
   473  00C4  28C6               	goto	u71
   474  00C5  28C7               	goto	u70
   475  00C6                     u71:
   476  00C6  28CC               	goto	l841
   477  00C7                     u70:
   478  00C7                     l837:
   479  00C7  1885               	btfsc	5,1	;volatile
   480  00C8  28CA               	goto	u81
   481  00C9  28CB               	goto	u80
   482  00CA                     u81:
   483  00CA  28CC               	goto	l841
   484  00CB                     u80:
   485  00CB                     l839:
   486                           
   487                           ;LAB2src.c: 98: 
   488  00CB  01F6               	clrf	_check1
   489  00CC                     l841:
   490                           
   491                           ;LAB2src.c: 101: 
   492  00CC  1C05               	btfss	5,0	;volatile
   493  00CD  28CF               	goto	u91
   494  00CE  28D0               	goto	u90
   495  00CF                     u91:
   496  00CF  28DA               	goto	l849
   497  00D0                     u90:
   498  00D0                     l843:
   499  00D0  0877               	movf	_check0,w
   500  00D1  1D03               	btfss	3,2
   501  00D2  28D4               	goto	u101
   502  00D3  28D5               	goto	u100
   503  00D4                     u101:
   504  00D4  28DA               	goto	l849
   505  00D5                     u100:
   506  00D5                     l845:
   507                           
   508                           ;LAB2src.c: 102: 
   509  00D5  01F7               	clrf	_check0
   510  00D6  0AF7               	incf	_check0,f
   511  00D7                     l847:
   512                           
   513                           ;LAB2src.c: 103: void setup(void) {
   514  00D7  0808               	movf	8,w	;volatile
   515  00D8  3E01               	addlw	1
   516  00D9  0088               	movwf	8	;volatile
   517  00DA                     l849:
   518                           
   519                           ;LAB2src.c: 106:     PORTD = 0;
   520  00DA  1C85               	btfss	5,1	;volatile
   521  00DB  28DD               	goto	u111
   522  00DC  28DE               	goto	u110
   523  00DD                     u111:
   524  00DD  28E8               	goto	l74
   525  00DE                     u110:
   526  00DE                     l851:
   527  00DE  0876               	movf	_check1,w
   528  00DF  1D03               	btfss	3,2
   529  00E0  28E2               	goto	u121
   530  00E1  28E3               	goto	u120
   531  00E2                     u121:
   532  00E2  28E8               	goto	l74
   533  00E3                     u120:
   534  00E3                     l853:
   535                           
   536                           ;LAB2src.c: 107: 
   537  00E3  01F6               	clrf	_check1
   538  00E4  0AF6               	incf	_check1,f
   539  00E5                     l855:
   540                           
   541                           ;LAB2src.c: 108:     TRISA = 1;
   542  00E5  0808               	movf	8,w	;volatile
   543  00E6  3EFF               	addlw	255
   544  00E7  0088               	movwf	8	;volatile
   545  00E8                     l74:	
   546                           ;LAB2src.c: 109:     ANSEL = 0;
   547                           
   548                           
   549                           ;LAB2src.c: 111:     TRISB = 0;
   550  00E8  0375               	decf	_ADC,w
   551  00E9  1D03               	btfss	3,2
   552  00EA  28EC               	goto	u131
   553  00EB  28ED               	goto	u130
   554  00EC                     u131:
   555  00EC  2900               	goto	l865
   556  00ED                     u130:
   557  00ED                     l857:
   558                           
   559                           ;LAB2src.c: 112:     ANSELH = 0;
   560  00ED  120A  118A  218E  120A  118A  	fcall	_getADC
   561  00F2  00FD               	movwf	??_main
   562  00F3  087D               	movf	??_main,w
   563  00F4  00F4               	movwf	_ADCresult
   564  00F5                     l859:
   565                           
   566                           ;LAB2src.c: 113: 
   567  00F5  01F5               	clrf	_ADC
   568  00F6                     l861:
   569                           
   570                           ;LAB2src.c: 114:     check0 = 0;
   571  00F6  30C7               	movlw	199
   572  00F7  00FD               	movwf	??_main
   573  00F8                     u177:
   574  00F8  28F9               	nop2
   575  00F9  0BFD               	decfsz	??_main,f
   576  00FA  28F8               	goto	u177
   577  00FB  28FC               	nop2
   578  00FC  28FD               	nop2
   579  00FD                     l863:
   580                           
   581                           ;LAB2src.c: 115:     check1 = 0;
   582  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   583  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   584  00FF  149F               	bsf	31,1	;volatile
   585  0100                     l865:
   586                           
   587                           ;LAB2src.c: 118: 
   588  0100  0872               	movf	_multiplex,w
   589  0101  1D03               	btfss	3,2
   590  0102  2904               	goto	u141
   591  0103  2905               	goto	u140
   592  0104                     u141:
   593  0104  2913               	goto	l871
   594  0105                     u140:
   595  0105                     l867:
   596                           
   597                           ;LAB2src.c: 119: 
   598  0105  0874               	movf	_ADCresult,w
   599  0106  390F               	andlw	15
   600  0107  00FD               	movwf	??_main
   601  0108  087D               	movf	??_main,w
   602  0109  00F3               	movwf	_sevenval
   603  010A                     l869:
   604                           
   605                           ;LAB2src.c: 120: 
   606  010A  0873               	movf	_sevenval,w
   607  010B  120A  118A  201B  120A  118A  	fcall	_seven_seg
   608  0110  1283               	bcf	3,5	;RP0=0, select bank0
   609  0111  1303               	bcf	3,6	;RP1=0, select bank0
   610  0112  0086               	movwf	6	;volatile
   611  0113                     l871:
   612                           
   613                           ;LAB2src.c: 123:     ADCON0bits.ADCS = 0b01;
   614  0113  0372               	decf	_multiplex,w
   615  0114  1D03               	btfss	3,2
   616  0115  2917               	goto	u151
   617  0116  2918               	goto	u150
   618  0117                     u151:
   619  0117  28B8               	goto	l829
   620  0118                     u150:
   621  0118                     l873:
   622                           
   623                           ;LAB2src.c: 124:     ADCON1bits.VCFG0 = 0;
   624  0118  0874               	movf	_ADCresult,w
   625  0119  390F               	andlw	15
   626  011A  00FD               	movwf	??_main
   627  011B  087D               	movf	??_main,w
   628  011C  00F3               	movwf	_sevenval
   629  011D                     l875:
   630                           
   631                           ;LAB2src.c: 125:     ADCON1bits.VCFG1 = 0;
   632  011D  0873               	movf	_sevenval,w
   633  011E  120A  118A  201B  120A  118A  	fcall	_seven_seg
   634  0123  1283               	bcf	3,5	;RP0=0, select bank0
   635  0124  1303               	bcf	3,6	;RP1=0, select bank0
   636  0125  0086               	movwf	6	;volatile
   637  0126                     l877:
   638                           
   639                           ;LAB2src.c: 126:     ADCON0bits.CHS = 0b0010;
   640  0126  1786               	bsf	6,7	;volatile
   641  0127  28B8               	goto	l829
   642  0128  120A  118A  280C   	ljmp	start
   643  012B                     __end_of_main:
   644                           
   645                           	psect	text1
   646  001B                     __ptext1:	
   647 ;; *************** function _seven_seg *****************
   648 ;; Defined at:
   649 ;;		line 13 in file "LAB2lib.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  sevenval        1    wreg     unsigned char 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  sevenval        1    4[COMMON] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      unsigned char 
   656 ;; Registers used:
   657 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         1       0       0       0       0
   665 ;;      Temps:          2       0       0       0       0
   666 ;;      Totals:         3       0       0       0       0
   667 ;;Total ram usage:        3 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _seven_seg
   679  001B                     _seven_seg:
   680                           
   681                           ;incstack = 0
   682                           ; Regs used in _seven_seg: [wreg-fsr0h+status,2+status,0]
   683                           ;seven_seg@sevenval stored from wreg
   684  001B  00FC               	movwf	seven_seg@sevenval
   685  001C                     l763:
   686                           
   687                           ;LAB2lib.c: 15:     switch(sevenval){
   688  001C  286D               	goto	l799
   689  001D                     l765:
   690                           
   691                           ;LAB2lib.c: 17:             sevenhex = 0b00111111;
   692  001D  303F               	movlw	63
   693  001E  00FA               	movwf	??_seven_seg
   694  001F  087A               	movf	??_seven_seg,w
   695  0020  00F0               	movwf	_sevenhex
   696                           
   697                           ;LAB2lib.c: 18:             break;
   698  0021  28A7               	goto	l801
   699  0022                     l767:
   700                           
   701                           ;LAB2lib.c: 21:             sevenhex = 0b00000110;
   702  0022  3006               	movlw	6
   703  0023  00FA               	movwf	??_seven_seg
   704  0024  087A               	movf	??_seven_seg,w
   705  0025  00F0               	movwf	_sevenhex
   706                           
   707                           ;LAB2lib.c: 22:             break;
   708  0026  28A7               	goto	l801
   709  0027                     l769:
   710                           
   711                           ;LAB2lib.c: 25:             sevenhex = 0b01011011;
   712  0027  305B               	movlw	91
   713  0028  00FA               	movwf	??_seven_seg
   714  0029  087A               	movf	??_seven_seg,w
   715  002A  00F0               	movwf	_sevenhex
   716                           
   717                           ;LAB2lib.c: 26:             break;
   718  002B  28A7               	goto	l801
   719  002C                     l771:
   720                           
   721                           ;LAB2lib.c: 29:             sevenhex = 0b01001111;
   722  002C  304F               	movlw	79
   723  002D  00FA               	movwf	??_seven_seg
   724  002E  087A               	movf	??_seven_seg,w
   725  002F  00F0               	movwf	_sevenhex
   726                           
   727                           ;LAB2lib.c: 30:             break;
   728  0030  28A7               	goto	l801
   729  0031                     l773:
   730                           
   731                           ;LAB2lib.c: 33:             sevenhex = 0b01100110;
   732  0031  3066               	movlw	102
   733  0032  00FA               	movwf	??_seven_seg
   734  0033  087A               	movf	??_seven_seg,w
   735  0034  00F0               	movwf	_sevenhex
   736                           
   737                           ;LAB2lib.c: 34:             break;
   738  0035  28A7               	goto	l801
   739  0036                     l775:
   740                           
   741                           ;LAB2lib.c: 37:             sevenhex = 0b01101101;
   742  0036  306D               	movlw	109
   743  0037  00FA               	movwf	??_seven_seg
   744  0038  087A               	movf	??_seven_seg,w
   745  0039  00F0               	movwf	_sevenhex
   746                           
   747                           ;LAB2lib.c: 38:             break;
   748  003A  28A7               	goto	l801
   749  003B                     l777:
   750                           
   751                           ;LAB2lib.c: 41:             sevenhex = 0b01111101;
   752  003B  307D               	movlw	125
   753  003C  00FA               	movwf	??_seven_seg
   754  003D  087A               	movf	??_seven_seg,w
   755  003E  00F0               	movwf	_sevenhex
   756                           
   757                           ;LAB2lib.c: 42:             break;
   758  003F  28A7               	goto	l801
   759  0040                     l779:
   760                           
   761                           ;LAB2lib.c: 45:             sevenhex = 0b00000111;
   762  0040  3007               	movlw	7
   763  0041  00FA               	movwf	??_seven_seg
   764  0042  087A               	movf	??_seven_seg,w
   765  0043  00F0               	movwf	_sevenhex
   766                           
   767                           ;LAB2lib.c: 46:             break;
   768  0044  28A7               	goto	l801
   769  0045                     l781:
   770                           
   771                           ;LAB2lib.c: 49:             sevenhex = 0b01111111;
   772  0045  307F               	movlw	127
   773  0046  00FA               	movwf	??_seven_seg
   774  0047  087A               	movf	??_seven_seg,w
   775  0048  00F0               	movwf	_sevenhex
   776                           
   777                           ;LAB2lib.c: 50:             break;
   778  0049  28A7               	goto	l801
   779  004A                     l783:
   780                           
   781                           ;LAB2lib.c: 53:             sevenhex = 0b01100111;
   782  004A  3067               	movlw	103
   783  004B  00FA               	movwf	??_seven_seg
   784  004C  087A               	movf	??_seven_seg,w
   785  004D  00F0               	movwf	_sevenhex
   786                           
   787                           ;LAB2lib.c: 54:             break;
   788  004E  28A7               	goto	l801
   789  004F                     l785:
   790                           
   791                           ;LAB2lib.c: 57:             sevenhex = 0b01110111;
   792  004F  3077               	movlw	119
   793  0050  00FA               	movwf	??_seven_seg
   794  0051  087A               	movf	??_seven_seg,w
   795  0052  00F0               	movwf	_sevenhex
   796                           
   797                           ;LAB2lib.c: 58:             break;
   798  0053  28A7               	goto	l801
   799  0054                     l787:
   800                           
   801                           ;LAB2lib.c: 61:             sevenhex = 0b01111100;
   802  0054  307C               	movlw	124
   803  0055  00FA               	movwf	??_seven_seg
   804  0056  087A               	movf	??_seven_seg,w
   805  0057  00F0               	movwf	_sevenhex
   806                           
   807                           ;LAB2lib.c: 62:             break;
   808  0058  28A7               	goto	l801
   809  0059                     l789:
   810                           
   811                           ;LAB2lib.c: 65:             sevenhex = 0b00111001;
   812  0059  3039               	movlw	57
   813  005A  00FA               	movwf	??_seven_seg
   814  005B  087A               	movf	??_seven_seg,w
   815  005C  00F0               	movwf	_sevenhex
   816                           
   817                           ;LAB2lib.c: 66:             break;
   818  005D  28A7               	goto	l801
   819  005E                     l791:
   820                           
   821                           ;LAB2lib.c: 69:             sevenhex = 0b01011110;
   822  005E  305E               	movlw	94
   823  005F  00FA               	movwf	??_seven_seg
   824  0060  087A               	movf	??_seven_seg,w
   825  0061  00F0               	movwf	_sevenhex
   826                           
   827                           ;LAB2lib.c: 70:             break;
   828  0062  28A7               	goto	l801
   829  0063                     l793:
   830                           
   831                           ;LAB2lib.c: 73:             sevenhex = 0b01111001;
   832  0063  3079               	movlw	121
   833  0064  00FA               	movwf	??_seven_seg
   834  0065  087A               	movf	??_seven_seg,w
   835  0066  00F0               	movwf	_sevenhex
   836                           
   837                           ;LAB2lib.c: 74:             break;
   838  0067  28A7               	goto	l801
   839  0068                     l795:
   840                           
   841                           ;LAB2lib.c: 77:             sevenhex = 0b01110001;
   842  0068  3071               	movlw	113
   843  0069  00FA               	movwf	??_seven_seg
   844  006A  087A               	movf	??_seven_seg,w
   845  006B  00F0               	movwf	_sevenhex
   846                           
   847                           ;LAB2lib.c: 78:             break;
   848  006C  28A7               	goto	l801
   849  006D                     l799:
   850  006D  087C               	movf	seven_seg@sevenval,w
   851  006E  00FA               	movwf	??_seven_seg
   852  006F  01FB               	clrf	??_seven_seg+1
   853                           
   854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   855                           ; Switch size 1, requested type "simple"
   856                           ; Number of cases is 1, Range of values is 0 to 0
   857                           ; switch strategies available:
   858                           ; Name         Instructions Cycles
   859                           ; simple_byte            4     3 (average)
   860                           ; direct_byte           11     8 (fixed)
   861                           ; jumptable            260     6 (fixed)
   862                           ;	Chosen strategy is simple_byte
   863  0070  087B               	movf	??_seven_seg+1,w
   864  0071  3A00               	xorlw	0	; case 0
   865  0072  1903               	skipnz
   866  0073  2875               	goto	l899
   867  0074  28A7               	goto	l801
   868  0075                     l899:
   869                           
   870                           ; Switch size 1, requested type "simple"
   871                           ; Number of cases is 16, Range of values is 0 to 15
   872                           ; switch strategies available:
   873                           ; Name         Instructions Cycles
   874                           ; simple_byte           49    25 (average)
   875                           ; direct_byte           56     8 (fixed)
   876                           ; jumptable            260     6 (fixed)
   877                           ;	Chosen strategy is simple_byte
   878  0075  087A               	movf	??_seven_seg,w
   879  0076  3A00               	xorlw	0	; case 0
   880  0077  1903               	skipnz
   881  0078  281D               	goto	l765
   882  0079  3A01               	xorlw	1	; case 1
   883  007A  1903               	skipnz
   884  007B  2822               	goto	l767
   885  007C  3A03               	xorlw	3	; case 2
   886  007D  1903               	skipnz
   887  007E  2827               	goto	l769
   888  007F  3A01               	xorlw	1	; case 3
   889  0080  1903               	skipnz
   890  0081  282C               	goto	l771
   891  0082  3A07               	xorlw	7	; case 4
   892  0083  1903               	skipnz
   893  0084  2831               	goto	l773
   894  0085  3A01               	xorlw	1	; case 5
   895  0086  1903               	skipnz
   896  0087  2836               	goto	l775
   897  0088  3A03               	xorlw	3	; case 6
   898  0089  1903               	skipnz
   899  008A  283B               	goto	l777
   900  008B  3A01               	xorlw	1	; case 7
   901  008C  1903               	skipnz
   902  008D  2840               	goto	l779
   903  008E  3A0F               	xorlw	15	; case 8
   904  008F  1903               	skipnz
   905  0090  2845               	goto	l781
   906  0091  3A01               	xorlw	1	; case 9
   907  0092  1903               	skipnz
   908  0093  284A               	goto	l783
   909  0094  3A03               	xorlw	3	; case 10
   910  0095  1903               	skipnz
   911  0096  284F               	goto	l785
   912  0097  3A01               	xorlw	1	; case 11
   913  0098  1903               	skipnz
   914  0099  2854               	goto	l787
   915  009A  3A07               	xorlw	7	; case 12
   916  009B  1903               	skipnz
   917  009C  2859               	goto	l789
   918  009D  3A01               	xorlw	1	; case 13
   919  009E  1903               	skipnz
   920  009F  285E               	goto	l791
   921  00A0  3A03               	xorlw	3	; case 14
   922  00A1  1903               	skipnz
   923  00A2  2863               	goto	l793
   924  00A3  3A01               	xorlw	1	; case 15
   925  00A4  1903               	skipnz
   926  00A5  2868               	goto	l795
   927  00A6  28A7               	goto	l801
   928  00A7                     l801:
   929                           
   930                           ;LAB2lib.c: 81:     return sevenhex;
   931  00A7  0870               	movf	_sevenhex,w
   932  00A8                     l113:
   933  00A8  0008               	return
   934  00A9                     __end_of_seven_seg:
   935                           
   936                           	psect	text2
   937  012B                     __ptext2:	
   938 ;; *************** function _setup *****************
   939 ;; Defined at:
   940 ;;		line 139 in file "LAB2src.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0
   957 ;;      Totals:         0       0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function _setup
   970  012B                     _setup:
   971  012B                     l705:	
   972                           ;incstack = 0
   973                           ; Regs used in _setup: [wreg+status,2+status,0]
   974                           
   975                           
   976                           ;LAB2src.c: 141:     TMR0 = 0;
   977  012B  1683               	bsf	3,5	;RP0=1, select bank1
   978  012C  1303               	bcf	3,6	;RP1=0, select bank1
   979  012D  0188               	clrf	8	;volatile
   980                           
   981                           ;LAB2src.c: 142: 
   982  012E  1283               	bcf	3,5	;RP0=0, select bank0
   983  012F  1303               	bcf	3,6	;RP1=0, select bank0
   984  0130  0188               	clrf	8	;volatile
   985  0131                     l707:
   986  0131  3001               	movlw	1
   987  0132  1683               	bsf	3,5	;RP0=1, select bank1
   988  0133  1303               	bcf	3,6	;RP1=0, select bank1
   989  0134  0085               	movwf	5	;volatile
   990  0135                     l709:
   991  0135  1683               	bsf	3,5	;RP0=1, select bank3
   992  0136  1703               	bsf	3,6	;RP1=1, select bank3
   993  0137  0188               	clrf	8	;volatile
   994  0138                     l711:
   995  0138  1683               	bsf	3,5	;RP0=1, select bank1
   996  0139  1303               	bcf	3,6	;RP1=0, select bank1
   997  013A  0186               	clrf	6	;volatile
   998  013B                     l713:
   999  013B  1683               	bsf	3,5	;RP0=1, select bank3
  1000  013C  1703               	bsf	3,6	;RP1=1, select bank3
  1001  013D  0189               	clrf	9	;volatile
  1002  013E                     l715:
  1003  013E  01F7               	clrf	_check0
  1004  013F                     l717:
  1005  013F  01F6               	clrf	_check1
  1006  0140                     l719:
  1007  0140  01F5               	clrf	_ADC
  1008  0141                     l721:
  1009  0141  01F2               	clrf	_multiplex
  1010  0142                     l723:
  1011  0142  1508               	bsf	8,2	;volatile
  1012  0143                     l725:
  1013  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0145  1105               	bcf	5,2	;volatile
  1016  0146                     l727:
  1017  0146  081F               	movf	31,w	;volatile
  1018  0147  393F               	andlw	-193
  1019  0148  3840               	iorlw	64
  1020  0149  009F               	movwf	31	;volatile
  1021  014A                     l729:
  1022  014A  1683               	bsf	3,5	;RP0=1, select bank1
  1023  014B  1303               	bcf	3,6	;RP1=0, select bank1
  1024  014C  121F               	bcf	31,4	;volatile
  1025  014D                     l731:
  1026  014D  129F               	bcf	31,5	;volatile
  1027  014E                     l733:
  1028  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1029  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0150  081F               	movf	31,w	;volatile
  1031  0151  39C3               	andlw	-61
  1032  0152  3808               	iorlw	8
  1033  0153  009F               	movwf	31	;volatile
  1034  0154                     l735:
  1035  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1036  0155  1303               	bcf	3,6	;RP1=0, select bank1
  1037  0156  139F               	bcf	31,7	;volatile
  1038  0157                     l737:
  1039  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0159  141F               	bsf	31,0	;volatile
  1042  015A                     l739:
  1043  015A  130C               	bcf	12,6	;volatile
  1044  015B                     l741:
  1045  015B  1683               	bsf	3,5	;RP0=1, select bank1
  1046  015C  1303               	bcf	3,6	;RP1=0, select bank1
  1047  015D  170C               	bsf	12,6	;volatile
  1048  015E                     l743:
  1049  015E  170B               	bsf	11,6	;volatile
  1050  015F                     l745:
  1051  015F  178B               	bsf	11,7	;volatile
  1052  0160                     l747:
  1053  0160  1181               	bcf	1,3	;volatile
  1054  0161                     l749:
  1055  0161  0801               	movf	1,w	;volatile
  1056  0162  39F8               	andlw	-8
  1057  0163  3801               	iorlw	1
  1058  0164  0081               	movwf	1	;volatile
  1059  0165                     l751:
  1060  0165  1281               	bcf	1,5	;volatile
  1061  0166                     l753:
  1062  0166  110B               	bcf	11,2	;volatile
  1063  0167                     l755:
  1064  0167  168B               	bsf	11,5	;volatile
  1065  0168                     l757:
  1066  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1068  016A  0181               	clrf	1	;volatile
  1069  016B                     l83:
  1070  016B  0008               	return
  1071  016C                     __end_of_setup:
  1072                           
  1073                           	psect	text3
  1074  018E                     __ptext3:	
  1075 ;; *************** function _getADC *****************
  1076 ;; Defined at:
  1077 ;;		line 7 in file "LAB2lib.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      unsigned char 
  1084 ;; Registers used:
  1085 ;;		wreg
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0
  1093 ;;      Temps:          1       0       0       0       0
  1094 ;;      Totals:         1       0       0       0       0
  1095 ;;Total ram usage:        1 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _getADC
  1107  018E                     _getADC:
  1108  018E                     l759:	
  1109                           ;incstack = 0
  1110                           ; Regs used in _getADC: [wreg]
  1111                           
  1112                           
  1113                           ;LAB2lib.c: 9:     ADCvalue = ADRESH;
  1114  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1115  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0190  081E               	movf	30,w	;volatile
  1117  0191  00FA               	movwf	??_getADC
  1118  0192  087A               	movf	??_getADC,w
  1119  0193  00F1               	movwf	_ADCvalue
  1120                           
  1121                           ;LAB2lib.c: 10:     return ADCvalue;
  1122  0194  0871               	movf	_ADCvalue,w
  1123  0195                     l92:
  1124  0195  0008               	return
  1125  0196                     __end_of_getADC:
  1126                           
  1127                           	psect	text4
  1128  016C                     __ptext4:	
  1129 ;; *************** function _ISR *****************
  1130 ;; Defined at:
  1131 ;;		line 62 in file "LAB2src.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0
  1147 ;;      Temps:          2       0       0       0       0
  1148 ;;      Totals:         2       0       0       0       0
  1149 ;;Total ram usage:        2 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		Interrupt level 1
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _ISR
  1160  016C                     _ISR:
  1161  016C                     i1l809:
  1162                           
  1163                           ;LAB2src.c: 63:         }
  1164  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1165  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1166  016E  1F0C               	btfss	12,6	;volatile
  1167  016F  2971               	goto	u1_21
  1168  0170  2972               	goto	u1_20
  1169  0171                     u1_21:
  1170  0171  2975               	goto	i1l61
  1171  0172                     u1_20:
  1172  0172                     i1l811:
  1173                           
  1174                           ;LAB2src.c: 64: 
  1175  0172  130C               	bcf	12,6	;volatile
  1176                           
  1177                           ;LAB2src.c: 65:         if (PORTAbits.RA0 == 1 && check0 == 0){
  1178  0173  01F5               	clrf	_ADC
  1179  0174  0AF5               	incf	_ADC,f
  1180  0175                     i1l61:	
  1181                           ;LAB2src.c: 66:             check0 = 1;
  1182                           
  1183                           
  1184                           ;LAB2src.c: 68:         }
  1185  0175  1D0B               	btfss	11,2	;volatile
  1186  0176  2978               	goto	u2_21
  1187  0177  2979               	goto	u2_20
  1188  0178                     u2_21:
  1189  0178  2987               	goto	i1l65
  1190  0179                     u2_20:
  1191  0179                     i1l813:
  1192                           
  1193                           ;LAB2src.c: 69: 
  1194  0179  110B               	bcf	11,2	;volatile
  1195  017A                     i1l815:
  1196                           
  1197                           ;LAB2src.c: 70:         if (PORTAbits.RA1 == 1 && check1 == 0){
  1198  017A  0872               	movf	_multiplex,w
  1199  017B  1D03               	btfss	3,2
  1200  017C  297E               	goto	u3_21
  1201  017D  297F               	goto	u3_20
  1202  017E                     u3_21:
  1203  017E  2981               	goto	i1l819
  1204  017F                     u3_20:
  1205  017F                     i1l817:
  1206                           
  1207                           ;LAB2src.c: 71:             check1 = 1;
  1208  017F  01F2               	clrf	_multiplex
  1209  0180  0AF2               	incf	_multiplex,f
  1210  0181                     i1l819:
  1211                           
  1212                           ;LAB2src.c: 74: 
  1213  0181  0372               	decf	_multiplex,w
  1214  0182  1D03               	btfss	3,2
  1215  0183  2985               	goto	u4_21
  1216  0184  2986               	goto	u4_20
  1217  0185                     u4_21:
  1218  0185  2987               	goto	i1l65
  1219  0186                     u4_20:
  1220  0186                     i1l821:
  1221                           
  1222                           ;LAB2src.c: 75:         if (ADC == 1){
  1223  0186  01F2               	clrf	_multiplex
  1224  0187                     i1l65:
  1225  0187  0879               	movf	??_ISR+1,w
  1226  0188  008A               	movwf	10
  1227  0189  0E78               	swapf	??_ISR,w
  1228  018A  0083               	movwf	3
  1229  018B  0EFE               	swapf	btemp,f
  1230  018C  0E7E               	swapf	btemp,w
  1231  018D  0009               	retfie
  1232  018E                     __end_of_ISR:
  1233  007E                     btemp	set	126	;btemp
  1234  007E                     wtemp0	set	126
  1235                           
  1236                           	psect	intentry
  1237  0004                     __pintentry:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1240                           
  1241  0004                     interrupt_function:
  1242  007E                     saved_w	set	btemp
  1243  0004  00FE               	movwf	btemp
  1244  0005  0E03               	swapf	3,w
  1245  0006  00F8               	movwf	??_ISR
  1246  0007  080A               	movf	10,w
  1247  0008  00F9               	movwf	??_ISR+1
  1248  0009  120A  118A  296C   	ljmp	_ISR
  1249                           
  1250                           	psect	config
  1251                           
  1252                           ;Config register CONFIG1 @ 0x2007
  1253                           ;	Oscillator Selection bits
  1254                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1255                           ;	Watchdog Timer Enable bit
  1256                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1257                           ;	Power-up Timer Enable bit
  1258                           ;	PWRTE = OFF, PWRT disabled
  1259                           ;	RE3/MCLR pin function select bit
  1260                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1261                           ;	Code Protection bit
  1262                           ;	CP = OFF, Program memory code protection is disabled
  1263                           ;	Data Code Protection bit
  1264                           ;	CPD = OFF, Data memory code protection is disabled
  1265                           ;	Brown Out Reset Selection bits
  1266                           ;	BOREN = OFF, BOR disabled
  1267                           ;	Internal External Switchover bit
  1268                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1269                           ;	Fail-Safe Clock Monitor Enabled bit
  1270                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1271                           ;	Low Voltage Programming Enable bit
  1272                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1273                           ;	In-Circuit Debugger Mode bit
  1274                           ;	DEBUG = 0x1, unprogrammed default
  1275  2007                     	org	8199
  1276  2007  20F4               	dw	8436
  1277                           
  1278                           ;Config register CONFIG2 @ 0x2008
  1279                           ;	Brown-out Reset Selection bit
  1280                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1281                           ;	Flash Program Memory Self Write Enable bits
  1282                           ;	WRT = OFF, Write protection off
  1283  2008                     	org	8200
  1284  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_seven_seg

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              5 COMMON     1     1      0
                             _getADC
                              _setup
                          _seven_seg
 ---------------------------------------------------------------------------------
 (1) _seven_seg                                            3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getADC                                               1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getADC
   _setup
   _seven_seg

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 23:29:29 2021

                     l74 00E8                       l83 016B                       l92 0195  
                     u50 00BD                       u51 00BC                       u60 00C1  
                     u61 00C0                       u70 00C7                       u71 00C6  
                     u80 00CB                       u81 00CA                       u90 00D0  
                     u91 00CF                      l113 00A8                      _ADC 0075  
                    l711 0138                      l721 0141                      l713 013B  
                    l705 012B                      l801 00A7                      l731 014D  
                    l723 0142                      l715 013E                      l707 0131  
                    l741 015B                      l733 014E                      l725 0143  
                    l717 013F                      l709 0135                      l751 0165  
                    l743 015E                      l735 0154                      l727 0146  
                    l719 0140                      l831 00BD                      l823 00A9  
                    l753 0166                      l745 015F                      l737 0157  
                    l729 014A                      l841 00CC                      l833 00C1  
                    l825 00AE                      l755 0167                      l747 0160  
                    l739 015A                      l771 002C                      l763 001C  
                    l851 00DE                      l843 00D0                      l835 00C2  
                    l827 00B5                      l757 0168                      l749 0161  
                    l781 0045                      l773 0031                      l765 001D  
                    l861 00F6                      l853 00E3                      l845 00D5  
                    l837 00C7                      l829 00B8                      l759 018E  
                    l791 005E                      l783 004A                      l775 0036  
                    l767 0022                      l871 0113                      l863 00FD  
                    l855 00E5                      l847 00D7                      l839 00CB  
                    l793 0063                      l785 004F                      l777 003B  
                    l769 0027                      l873 0118                      l857 00ED  
                    l865 0100                      l849 00DA                      l795 0068  
                    l787 0054                      l779 0040                      l875 011D  
                    l867 0105                      l859 00F5                      l789 0059  
                    l877 0126                      l869 010A                      l799 006D  
                    l899 0075                      u100 00D5                      u101 00D4  
                    u110 00DE                      u111 00DD                      u120 00E3  
                    u121 00E2                      u130 00ED                      u131 00EC  
                    u140 0105                      u141 0104                      u150 0118  
                    u151 0117                      u167 00B0                      u177 00F8  
                    _ISR 016C                     ?_ISR 0078                     i1l61 0175  
                   i1l65 0187                     _TMR0 0001                     u1_20 0172  
                   u1_21 0171                     u2_20 0179                     u2_21 0178  
                   u3_20 017F                     u3_21 017E                     u4_20 0186  
                   u4_21 0185                     _main 00A9                     btemp 007E  
                   start 000C                    ??_ISR 0078                    ?_main 0078  
                  _ANSEL 0188                    i1l811 0172                    i1l821 0186  
                  i1l813 0179                    i1l815 017A                    i1l817 017F  
                  i1l809 016C                    i1l819 0181                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _setup 012B                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 012B                   ??_main 007D                   _ADRESH 001E  
                 ?_setup 0078                   _ANSELH 0189                   _check0 0077  
                 _check1 0076                   _getADC 018E                   saved_w 007E  
__end_of__initialization 0017           __pcstackCOMMON 0078            __end_of_setup 016C  
         _OPTION_REGbits 0081                  ??_setup 007A               __pmaintext 00A9  
                ?_getADC 0078               __pintentry 0004       __size_of_seven_seg 008E  
        __size_of_getADC 0008        seven_seg@sevenval 007C                _ADCresult 0074  
              _ANSELbits 0188                  __ptext1 001B                  __ptext2 012B  
                __ptext3 018E                  __ptext4 016C             __size_of_ISR 0022  
   end_of_initialization 0017        __end_of_seven_seg 00A9                _PORTAbits 0005  
              _PORTBbits 0006           __end_of_getADC 0196      start_initialization 000F  
            __end_of_ISR 018E                 ??_getADC 007A              __pbssCOMMON 0070  
              ___latbits 0002                 _ADCvalue 0071           __size_of_setup 0041  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
              _seven_seg 001B                _multiplex 0072               _ADCON0bits 001F  
             _ADCON1bits 009F               ?_seven_seg 0078            __size_of_main 0082  
               _sevenhex 0070                 _sevenval 0073               _INTCONbits 000B  
               intlevel1 0000              ??_seven_seg 007A  
