

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 23:08:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  000B                     _INTCONbits	set	11
   290  000C                     _PIR1bits	set	12
   291  0005                     _PORTAbits	set	5
   292  0008                     _PORTD	set	8
   293  0063                     _SSPIF	set	99
   294  0094                     _SSPSTATbits	set	148
   295  0094                     _SSPSTAT	set	148
   296  0085                     _TRISAbits	set	133
   297  008C                     _PIE1bits	set	140
   298  0085                     _TRISA	set	133
   299  0088                     _TRISD	set	136
   300  043B                     _TRISC3	set	1083
   301  043D                     _TRISC5	set	1085
   302  0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308  000F                     __initialization:
   309                           
   310                           ; Clear objects allocated to COMMON
   311  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   312  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   313  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   314  0012                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  0012                     __end_of__initialization:
   318  0012  0183               	clrf	3
   319  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0077                     __pbssCOMMON:
   323  0077                     _data:
   324  0077                     	ds	1
   325  0078                     _check1:
   326  0078                     	ds	1
   327  0079                     _check0:
   328  0079                     	ds	1
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_spiRead:
   333  0070                     ??_spiRead:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_spiWrite:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_spiWrite:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_setup:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_ISR:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_spiReceiveWait:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ??_spiReceiveWait:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     spiWrite@dat:	
   358                           ; 1 bytes @ 0x0
   359                           
   360                           
   361                           ; 1 bytes @ 0x0
   362  0070                     	ds	1
   363  0071                     ??_ISR:
   364                           
   365                           ; 1 bytes @ 0x1
   366  0071                     	ds	3
   367  0074                     ?_spiInit:
   368  0074                     spiInit@sDataSample:	
   369                           ; 1 bytes @ 0x4
   370                           
   371                           
   372                           ; 1 bytes @ 0x4
   373  0074                     	ds	1
   374  0075                     spiInit@sClockIdle:
   375                           
   376                           ; 1 bytes @ 0x5
   377  0075                     	ds	1
   378  0076                     spiInit@sTransmitEdge:
   379                           
   380                           ; 1 bytes @ 0x6
   381  0076                     	ds	1
   382  0077                     ??_setup:
   383  0077                     ??_spiInit:	
   384                           ; 1 bytes @ 0x7
   385                           
   386  0077                     ??_main:	
   387                           ; 1 bytes @ 0x7
   388                           
   389                           
   390                           	psect	cstackBANK0
   391  0020                     __pcstackBANK0:	
   392                           ; 1 bytes @ 0x7
   393                           
   394  0020                     spiInit@sType:
   395                           
   396                           ; 1 bytes @ 0x0
   397  0020                     	ds	1
   398                           
   399                           	psect	maintext
   400  0016                     __pmaintext:	
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 69 in file "COUNTERsrc.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : B00/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels required when called:    5
   426 ;; This function calls:
   427 ;;		_setup
   428 ;; This function is called by:
   429 ;;		Startup code after reset
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           
   434                           ;psect for function _main
   435  0016                     _main:
   436  0016                     l859:	
   437                           ;incstack = 0
   438                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   439                           
   440                           
   441                           ;COUNTERsrc.c: 70: 
   442  0016  120A  118A  2055  120A  118A  	fcall	_setup
   443  001B                     l861:
   444                           
   445                           ;COUNTERsrc.c: 75:     check1 = 0;
   446  001B  0379               	decf	_check0,w
   447  001C  1D03               	btfss	3,2
   448  001D  281F               	goto	u221
   449  001E  2820               	goto	u220
   450  001F                     u221:
   451  001F  2827               	goto	l867
   452  0020                     u220:
   453  0020                     l863:
   454  0020  1283               	bcf	3,5	;RP0=0, select bank0
   455  0021  1303               	bcf	3,6	;RP1=0, select bank0
   456  0022  1805               	btfsc	5,0	;volatile
   457  0023  2825               	goto	u231
   458  0024  2826               	goto	u230
   459  0025                     u231:
   460  0025  2827               	goto	l867
   461  0026                     u230:
   462  0026                     l865:
   463                           
   464                           ;COUNTERsrc.c: 76: 
   465  0026  01F9               	clrf	_check0
   466  0027                     l867:
   467                           
   468                           ;COUNTERsrc.c: 78:     PIR1bits.SSPIF = 0;
   469  0027  0378               	decf	_check1,w
   470  0028  1D03               	btfss	3,2
   471  0029  282B               	goto	u241
   472  002A  282C               	goto	u240
   473  002B                     u241:
   474  002B  2833               	goto	l873
   475  002C                     u240:
   476  002C                     l869:
   477  002C  1283               	bcf	3,5	;RP0=0, select bank0
   478  002D  1303               	bcf	3,6	;RP1=0, select bank0
   479  002E  1885               	btfsc	5,1	;volatile
   480  002F  2831               	goto	u251
   481  0030  2832               	goto	u250
   482  0031                     u251:
   483  0031  2833               	goto	l873
   484  0032                     u250:
   485  0032                     l871:
   486                           
   487                           ;COUNTERsrc.c: 79:     PIE1bits.SSPIE = 1;
   488  0032  01F8               	clrf	_check1
   489  0033                     l873:
   490                           
   491                           ;COUNTERsrc.c: 82:     INTCONbits.GIE = 1;
   492  0033  1283               	bcf	3,5	;RP0=0, select bank0
   493  0034  1303               	bcf	3,6	;RP1=0, select bank0
   494  0035  1C05               	btfss	5,0	;volatile
   495  0036  2838               	goto	u261
   496  0037  2839               	goto	u260
   497  0038                     u261:
   498  0038  2843               	goto	l881
   499  0039                     u260:
   500  0039                     l875:
   501  0039  0879               	movf	_check0,w
   502  003A  1D03               	btfss	3,2
   503  003B  283D               	goto	u271
   504  003C  283E               	goto	u270
   505  003D                     u271:
   506  003D  2843               	goto	l881
   507  003E                     u270:
   508  003E                     l877:
   509                           
   510                           ;COUNTERsrc.c: 83: 
   511  003E  01F9               	clrf	_check0
   512  003F  0AF9               	incf	_check0,f
   513  0040                     l879:
   514                           
   515                           ;COUNTERsrc.c: 84:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   516  0040  0808               	movf	8,w	;volatile
   517  0041  3E01               	addlw	1
   518  0042  0088               	movwf	8	;volatile
   519  0043                     l881:
   520                           
   521                           ;COUNTERsrc.c: 87: }
   522  0043  1C85               	btfss	5,1	;volatile
   523  0044  2846               	goto	u281
   524  0045  2847               	goto	u280
   525  0046                     u281:
   526  0046  281B               	goto	l861
   527  0047                     u280:
   528  0047                     l883:
   529  0047  0878               	movf	_check1,w
   530  0048  1D03               	btfss	3,2
   531  0049  284B               	goto	u291
   532  004A  284C               	goto	u290
   533  004B                     u291:
   534  004B  281B               	goto	l861
   535  004C                     u290:
   536  004C                     l885:
   537  004C  01F8               	clrf	_check1
   538  004D  0AF8               	incf	_check1,f
   539  004E                     l887:
   540  004E  0808               	movf	8,w	;volatile
   541  004F  3EFF               	addlw	255
   542  0050  0088               	movwf	8	;volatile
   543  0051  281B               	goto	l861
   544  0052  120A  118A  280C   	ljmp	start
   545  0055                     __end_of_main:
   546                           
   547                           	psect	text1
   548  0055                     __ptext1:	
   549 ;; *************** function _setup *****************
   550 ;; Defined at:
   551 ;;		line 102 in file "COUNTERsrc.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, pclath, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    4
   572 ;; This function calls:
   573 ;;		_spiInit
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _setup
   581  0055                     _setup:
   582  0055                     l837:	
   583                           ;incstack = 0
   584                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   585                           
   586  0055  1683               	bsf	3,5	;RP0=1, select bank1
   587  0056  1303               	bcf	3,6	;RP1=0, select bank1
   588  0057  0188               	clrf	8	;volatile
   589  0058  1283               	bcf	3,5	;RP0=0, select bank0
   590  0059  1303               	bcf	3,6	;RP1=0, select bank0
   591  005A  0188               	clrf	8	;volatile
   592  005B                     l839:
   593  005B  3001               	movlw	1
   594  005C  1683               	bsf	3,5	;RP0=1, select bank1
   595  005D  1303               	bcf	3,6	;RP1=0, select bank1
   596  005E  0085               	movwf	5	;volatile
   597  005F                     l841:
   598  005F  1683               	bsf	3,5	;RP0=1, select bank3
   599  0060  1703               	bsf	3,6	;RP1=1, select bank3
   600  0061  0188               	clrf	8	;volatile
   601  0062                     l843:
   602  0062  01F9               	clrf	_check0
   603  0063                     l845:
   604  0063  01F8               	clrf	_check1
   605  0064                     l847:
   606  0064  1283               	bcf	3,5	;RP0=0, select bank0
   607  0065  1303               	bcf	3,6	;RP1=0, select bank0
   608  0066  118C               	bcf	12,3	;volatile
   609  0067                     l849:
   610  0067  1683               	bsf	3,5	;RP0=1, select bank1
   611  0068  1303               	bcf	3,6	;RP1=0, select bank1
   612  0069  158C               	bsf	12,3	;volatile
   613  006A                     l851:
   614  006A  1685               	bsf	5,5	;volatile
   615  006B                     l853:
   616  006B  170B               	bsf	11,6	;volatile
   617  006C                     l855:
   618  006C  178B               	bsf	11,7	;volatile
   619  006D                     l857:
   620  006D  01F4               	clrf	spiInit@sDataSample
   621  006E  01F5               	clrf	spiInit@sClockIdle
   622  006F  01F6               	clrf	spiInit@sTransmitEdge
   623  0070  3024               	movlw	36
   624  0071  120A  118A  2097  120A  118A  	fcall	_spiInit
   625  0076                     l55:
   626  0076  0008               	return
   627  0077                     __end_of_setup:
   628                           
   629                           	psect	text2
   630  0097                     __ptext2:	
   631 ;; *************** function _spiInit *****************
   632 ;; Defined at:
   633 ;;		line 12 in file "SPI.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;  sType           1    wreg     enum E1264
   636 ;;  sDataSample     1    4[COMMON] enum E1272
   637 ;;  sClockIdle      1    5[COMMON] enum E1276
   638 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  sType           1    0[BANK0 ] enum E1264
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         3       0       0       0       0
   651 ;;      Locals:         0       1       0       0       0
   652 ;;      Temps:          0       0       0       0       0
   653 ;;      Totals:         3       1       0       0       0
   654 ;;Total ram usage:        4 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    3
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_setup
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _spiInit
   666  0097                     _spiInit:
   667                           
   668                           ;incstack = 0
   669                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   670                           ;spiInit@sType stored from wreg
   671  0097  1283               	bcf	3,5	;RP0=0, select bank0
   672  0098  1303               	bcf	3,6	;RP1=0, select bank0
   673  0099  00A0               	movwf	spiInit@sType
   674  009A                     l827:
   675                           
   676                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   677  009A  1683               	bsf	3,5	;RP0=1, select bank1
   678  009B  1303               	bcf	3,6	;RP1=0, select bank1
   679  009C  1287               	bcf	7,5	;volatile
   680                           
   681                           ;SPI.c: 15:     if(sType & 0b00000100)
   682  009D  1283               	bcf	3,5	;RP0=0, select bank0
   683  009E  1303               	bcf	3,6	;RP1=0, select bank0
   684  009F  1D20               	btfss	spiInit@sType,2
   685  00A0  28A2               	goto	u211
   686  00A1  28A3               	goto	u210
   687  00A2                     u211:
   688  00A2  28A9               	goto	l833
   689  00A3                     u210:
   690  00A3                     l829:
   691                           
   692                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   693  00A3  0876               	movf	spiInit@sTransmitEdge,w
   694  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   695  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   696  00A6  0094               	movwf	20	;volatile
   697  00A7                     l831:
   698                           
   699                           ;SPI.c: 18:         TRISC3 = 1;
   700  00A7  1587               	bsf	7,3	;volatile
   701                           
   702                           ;SPI.c: 19:     }
   703  00A8  28AF               	goto	l71
   704  00A9                     l833:
   705                           
   706                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   707  00A9  0874               	movf	spiInit@sDataSample,w
   708  00AA  0476               	iorwf	spiInit@sTransmitEdge,w
   709  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   710  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   711  00AD  0094               	movwf	20	;volatile
   712  00AE                     l835:
   713                           
   714                           ;SPI.c: 23:         TRISC3 = 0;
   715  00AE  1187               	bcf	7,3	;volatile
   716  00AF                     l71:	
   717                           ;SPI.c: 24:     }
   718                           
   719                           
   720                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   721  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   722  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   723  00B1  0820               	movf	spiInit@sType,w
   724  00B2  0475               	iorwf	spiInit@sClockIdle,w
   725  00B3  0094               	movwf	20	;volatile
   726  00B4                     l72:
   727  00B4  0008               	return
   728  00B5                     __end_of_spiInit:
   729                           
   730                           	psect	text3
   731  0077                     __ptext3:	
   732 ;; *************** function _ISR *****************
   733 ;; Defined at:
   734 ;;		line 56 in file "COUNTERsrc.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;		None
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0, pclath, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   748 ;;      Params:         0       0       0       0       0
   749 ;;      Locals:         0       0       0       0       0
   750 ;;      Temps:          3       0       0       0       0
   751 ;;      Totals:         3       0       0       0       0
   752 ;;Total ram usage:        3 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    2
   755 ;; This function calls:
   756 ;;		_spiRead
   757 ;;		_spiWrite
   758 ;; This function is called by:
   759 ;;		Interrupt level 1
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _ISR
   765  0077                     _ISR:
   766  0077                     i1l723:
   767                           
   768                           ;COUNTERsrc.c: 57: 
   769  0077  1283               	bcf	3,5	;RP0=0, select bank0
   770  0078  1303               	bcf	3,6	;RP1=0, select bank0
   771  0079  1D8C               	btfss	12,3	;volatile
   772  007A  287C               	goto	u3_21
   773  007B  287D               	goto	u3_20
   774  007C                     u3_21:
   775  007C  2890               	goto	i1l40
   776  007D                     u3_20:
   777  007D                     i1l725:
   778                           
   779                           ;COUNTERsrc.c: 58: 
   780  007D  120A  118A  20B5  120A  118A  	fcall	_spiRead
   781  0082  00F1               	movwf	??_ISR
   782  0083  0871               	movf	??_ISR,w
   783  0084  00F7               	movwf	_data
   784                           
   785                           ;COUNTERsrc.c: 59: }
   786  0085  1283               	bcf	3,5	;RP0=0, select bank0
   787  0086  1303               	bcf	3,6	;RP1=0, select bank0
   788  0087  0808               	movf	8,w	;volatile
   789  0088  120A  118A  20C5  120A  118A  	fcall	_spiWrite
   790  008D                     i1l727:
   791                           
   792                           ;COUNTERsrc.c: 60: 
   793  008D  1283               	bcf	3,5	;RP0=0, select bank0
   794  008E  1303               	bcf	3,6	;RP1=0, select bank0
   795  008F  118C               	bcf	12,3	;volatile
   796  0090                     i1l40:
   797  0090  0873               	movf	??_ISR+2,w
   798  0091  008A               	movwf	10
   799  0092  0E72               	swapf	??_ISR+1,w
   800  0093  0083               	movwf	3
   801  0094  0EFE               	swapf	btemp,f
   802  0095  0E7E               	swapf	btemp,w
   803  0096  0009               	retfie
   804  0097                     __end_of_ISR:
   805                           
   806                           	psect	intentry
   807  0004                     __pintentry:	
   808                           ;incstack = 0
   809                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   810                           
   811  0004                     interrupt_function:
   812  007E                     saved_w	set	btemp
   813  0004  00FE               	movwf	btemp
   814  0005  0E03               	swapf	3,w
   815  0006  00F2               	movwf	??_ISR+1
   816  0007  080A               	movf	10,w
   817  0008  00F3               	movwf	??_ISR+2
   818  0009  120A  118A  2877   	ljmp	_ISR
   819                           
   820                           	psect	text4
   821  00C5                     __ptext4:	
   822 ;; *************** function _spiWrite *****************
   823 ;; Defined at:
   824 ;;		line 34 in file "SPI.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  dat             1    wreg     unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  dat             1    0[COMMON] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         1       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0
   841 ;;      Totals:         1       0       0       0       0
   842 ;;Total ram usage:        1 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_ISR
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _spiWrite
   853  00C5                     _spiWrite:
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _spiWrite: [wreg]
   857                           ;spiWrite@dat stored from wreg
   858  00C5  00F0               	movwf	spiWrite@dat
   859  00C6                     i1l699:
   860                           
   861                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   862  00C6  0870               	movf	spiWrite@dat,w
   863  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   864  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   865  00C9  0093               	movwf	19	;volatile
   866  00CA                     i1l81:
   867  00CA  0008               	return
   868  00CB                     __end_of_spiWrite:
   869                           
   870                           	psect	text5
   871  00B5                     __ptext5:	
   872 ;; *************** function _spiRead *****************
   873 ;; Defined at:
   874 ;;		line 47 in file "SPI.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      unsigned char 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0, pclath, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    1
   895 ;; This function calls:
   896 ;;		_spiReceiveWait
   897 ;; This function is called by:
   898 ;;		_ISR
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _spiRead
   904  00B5                     _spiRead:
   905  00B5                     i1l693:	
   906                           ;incstack = 0
   907                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   908                           
   909                           
   910                           ;SPI.c: 49:     spiReceiveWait();
   911  00B5  120A  118A  20BE  120A  118A  	fcall	_spiReceiveWait
   912  00BA                     i1l695:
   913                           
   914                           ;SPI.c: 50:     return(SSPBUF);
   915  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   916  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   917  00BC  0813               	movf	19,w	;volatile
   918  00BD                     i1l89:
   919  00BD  0008               	return
   920  00BE                     __end_of_spiRead:
   921                           
   922                           	psect	text6
   923  00BE                     __ptext6:	
   924 ;; *************** function _spiReceiveWait *****************
   925 ;; Defined at:
   926 ;;		line 29 in file "SPI.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		None
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0
   943 ;;      Totals:         0       0       0       0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_spiRead
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _spiReceiveWait
   955  00BE                     _spiReceiveWait:
   956  00BE                     i1l691:	
   957                           ;incstack = 0
   958                           ; Regs used in _spiReceiveWait: []
   959                           
   960  00BE                     i1l75:	
   961                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   962                           
   963  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   964  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   965  00C0  1C14               	btfss	20,0	;volatile
   966  00C1  28C3               	goto	u2_21
   967  00C2  28C4               	goto	u2_20
   968  00C3                     u2_21:
   969  00C3  28BE               	goto	i1l75
   970  00C4                     u2_20:
   971  00C4                     i1l78:
   972  00C4  0008               	return
   973  00C5                     __end_of_spiReceiveWait:
   974  007E                     btemp	set	126	;btemp
   975  007E                     wtemp0	set	126
   976                           
   977                           	psect	config
   978                           
   979                           ;Config register CONFIG1 @ 0x2007
   980                           ;	Oscillator Selection bits
   981                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   982                           ;	Watchdog Timer Enable bit
   983                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   984                           ;	Power-up Timer Enable bit
   985                           ;	PWRTE = OFF, PWRT disabled
   986                           ;	RE3/MCLR pin function select bit
   987                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   988                           ;	Code Protection bit
   989                           ;	CP = OFF, Program memory code protection is disabled
   990                           ;	Data Code Protection bit
   991                           ;	CPD = OFF, Data memory code protection is disabled
   992                           ;	Brown Out Reset Selection bits
   993                           ;	BOREN = OFF, BOR disabled
   994                           ;	Internal External Switchover bit
   995                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   996                           ;	Fail-Safe Clock Monitor Enabled bit
   997                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   998                           ;	Low Voltage Programming Enable bit
   999                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1000                           ;	In-Circuit Debugger Mode bit
  1001                           ;	DEBUG = 0x1, unprogrammed default
  1002  2007                     	org	8199
  1003  2007  20F4               	dw	8436
  1004                           
  1005                           ;Config register CONFIG2 @ 0x2008
  1006                           ;	Brown-out Reset Selection bit
  1007                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1008                           ;	Flash Program Memory Self Write Enable bits
  1009                           ;	WRT = OFF, Write protection off
  1010  2008                     	org	8200
  1011  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 23:08:13 2021

            _SSPSTATbits 0094                       l71 00AF                       l55 0076  
                     l72 00B4                      l831 00A7                      l833 00A9  
                    l841 005F                      l835 00AE                      l827 009A  
                    l851 006A                      l843 0062                      l829 00A3  
                    l853 006B                      l845 0063                      l837 0055  
                    l861 001B                      l855 006C                      l847 0064  
                    l839 005B                      l871 0032                      l863 0020  
                    l857 006D                      l849 0067                      l881 0043  
                    l873 0033                      l865 0026                      l883 0047  
                    l875 0039                      l867 0027                      l859 0016  
                    l885 004C                      l877 003E                      l869 002C  
                    l887 004E                      l879 0040                      u210 00A3  
                    u211 00A2                      u220 0020                      u221 001F  
                    u230 0026                      u231 0025                      u240 002C  
                    u241 002B                      u250 0032                      u251 0031  
                    u260 0039                      u261 0038                      u270 003E  
                    u271 003D                      u280 0047                      u281 0046  
                    u290 004C                      u291 004B                      _ISR 0077  
                   ?_ISR 0070                     i1l40 0090                     i1l81 00CA  
                   i1l75 00BE                     i1l78 00C4                     i1l89 00BD  
                   u2_20 00C4                     u2_21 00C3                     u3_20 007D  
                   u3_21 007C                     _data 0077                     _main 0016  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l723 0077  
                  i1l725 007D                    i1l727 008D                    i1l691 00BE  
                  i1l693 00B5                    i1l695 00BA                    i1l699 00C6  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  _SSPIF 0063                    _setup 0055                    pclath 000A  
        __end_of_spiInit 00B5          __end_of_spiRead 00BE                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0055  
                 ??_main 0077                   ?_setup 0070                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _check0 0079                   _check1 0078                   saved_w 007E  
       __end_of_spiWrite 00CB                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0012           __pcstackCOMMON 0070            __end_of_setup 0077  
                ??_setup 0077               __pmaintext 0016               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0055                  __ptext2 0097                  __ptext3 0077  
                __ptext4 00C5                  __ptext5 00B5                  __ptext6 00BE  
           __size_of_ISR 0020                  _spiInit 0097                  _spiRead 00B5  
   end_of_initialization 0012               ??_spiWrite 0070                _PORTAbits 0005  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 00BE  
    start_initialization 000F              __end_of_ISR 0097   __end_of_spiReceiveWait 00C5  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0074  
               ?_spiRead 0070           __size_of_setup 0022     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 003F                 _spiWrite 00C5             spiInit@sType 0020  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070  
