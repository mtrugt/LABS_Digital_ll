

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:49:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  000B                     _INTCONbits	set	11
   291  0005                     _PORTAbits	set	5
   292  0007                     _PORTC	set	7
   293  0008                     _PORTD	set	8
   294  0008                     _PORTDbits	set	8
   295  001E                     _ADRESH	set	30
   296  001F                     _ADCON0bits	set	31
   297  000C                     _PIR1bits	set	12
   298  0063                     _SSPIF	set	99
   299  0094                     _SSPSTATbits	set	148
   300  0094                     _SSPSTAT	set	148
   301  0085                     _TRISAbits	set	133
   302  008C                     _PIE1bits	set	140
   303  009F                     _ADCON1bits	set	159
   304  0085                     _TRISA	set	133
   305  0088                     _TRISD	set	136
   306  043B                     _TRISC3	set	1083
   307  043D                     _TRISC5	set	1085
   308  0188                     _ANSELbits	set	392
   309  0188                     _ANSEL	set	392
   310                           
   311                           	psect	cinit
   312  000F                     start_initialization:	
   313                           ; #config settings
   314                           
   315  000F                     __initialization:
   316                           
   317                           ; Clear objects allocated to COMMON
   318  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   319  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   321  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   322  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   323                           
   324                           ; Clear objects allocated to BANK0
   325  0014  1283               	bcf	3,5	;RP0=0, select bank0
   326  0015  1303               	bcf	3,6	;RP1=0, select bank0
   327  0016  01A4               	clrf	__pbssBANK0& (0+127)
   328  0017  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   329  0018  01A6               	clrf	(__pbssBANK0+2)& (0+127)
   330  0019                     end_of_initialization:	
   331                           ;End of C runtime variable initialization code
   332                           
   333  0019                     __end_of__initialization:
   334  0019  0183               	clrf	3
   335  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMMON
   338  0070                     __pbssCOMMON:
   339  0070                     _stemp:
   340  0070                     	ds	1
   341  0071                     _datatemp:
   342  0071                     	ds	1
   343  0072                     _ADC:
   344  0072                     	ds	1
   345  0073                     _check1:
   346  0073                     	ds	1
   347  0074                     _check0:
   348  0074                     	ds	1
   349                           
   350                           	psect	bssBANK0
   351  0024                     __pbssBANK0:
   352  0024                     _sevenval:
   353  0024                     	ds	1
   354  0025                     _data:
   355  0025                     	ds	1
   356  0026                     _ADCresult:
   357  0026                     	ds	1
   358                           
   359                           	psect	cstackCOMMON
   360  0075                     __pcstackCOMMON:
   361  0075                     ?_spiRead:
   362  0075                     ??_spiRead:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0075                     ?_spiWrite:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0075                     ??_spiWrite:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0075                     ?_setup:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0075                     ?_ISR:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0075                     ?_main:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0075                     ?_spiReceiveWait:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0075                     ??_spiReceiveWait:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0075                     spiWrite@dat:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           ; 1 bytes @ 0x0
   391  0075                     	ds	1
   392  0076                     ??_ISR:
   393                           
   394                           ; 1 bytes @ 0x1
   395  0076                     	ds	3
   396  0079                     ??_spiInit:
   397  0079                     spiInit@sType:	
   398                           ; 1 bytes @ 0x4
   399                           
   400                           
   401                           ; 1 bytes @ 0x4
   402  0079                     	ds	1
   403  007A                     ??_setup:
   404                           
   405                           	psect	cstackBANK0
   406  0020                     __pcstackBANK0:	
   407                           ; 1 bytes @ 0x5
   408                           
   409  0020                     ?_spiInit:
   410  0020                     spiInit@sDataSample:	
   411                           ; 1 bytes @ 0x0
   412                           
   413                           
   414                           ; 1 bytes @ 0x0
   415  0020                     	ds	1
   416  0021                     spiInit@sClockIdle:
   417                           
   418                           ; 1 bytes @ 0x1
   419  0021                     	ds	1
   420  0022                     spiInit@sTransmitEdge:
   421                           
   422                           ; 1 bytes @ 0x2
   423  0022                     	ds	1
   424  0023                     ??_main:
   425                           
   426                           ; 1 bytes @ 0x3
   427  0023                     	ds	1
   428                           
   429                           	psect	maintext
   430  001D                     __pmaintext:	
   431 ;;
   432 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   433 ;;
   434 ;; *************** function _main *****************
   435 ;; Defined at:
   436 ;;		line 83 in file "STEMPsrc.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0, pclath, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : B00/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0
   452 ;;      Temps:          0       1       0       0       0
   453 ;;      Totals:         0       1       0       0       0
   454 ;;Total ram usage:        1 bytes
   455 ;; Hardware stack levels required when called:    5
   456 ;; This function calls:
   457 ;;		_setup
   458 ;; This function is called by:
   459 ;;		Startup code after reset
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _main
   465  001D                     _main:
   466  001D                     l997:	
   467                           ;incstack = 0
   468                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   469                           
   470                           
   471                           ;STEMPsrc.c: 84:         else {
   472  001D  120A  118A  207D  120A  118A  	fcall	_setup
   473  0022                     l999:
   474                           
   475                           ;STEMPsrc.c: 85:             datatemp = 0;
   476  0022  30C7               	movlw	199
   477  0023  1283               	bcf	3,5	;RP0=0, select bank0
   478  0024  1303               	bcf	3,6	;RP1=0, select bank0
   479  0025  00A3               	movwf	??_main
   480  0026                     u257:
   481  0026  2827               	nop2
   482  0027  0BA3               	decfsz	??_main,f
   483  0028  2826               	goto	u257
   484  0029  282A               	nop2
   485  002A                     l1001:
   486                           
   487                           ;STEMPsrc.c: 86:         }
   488  002A  1283               	bcf	3,5	;RP0=0, select bank0
   489  002B  1303               	bcf	3,6	;RP1=0, select bank0
   490  002C  149F               	bsf	31,1	;volatile
   491  002D                     l1003:
   492                           
   493                           ;STEMPsrc.c: 91: 
   494  002D  0372               	decf	_ADC,w
   495  002E  1D03               	btfss	3,2
   496  002F  2831               	goto	u201
   497  0030  2832               	goto	u200
   498  0031                     u201:
   499  0031  2844               	goto	l1013
   500  0032                     u200:
   501  0032                     l1005:
   502                           
   503                           ;STEMPsrc.c: 92: 
   504  0032  1283               	bcf	3,5	;RP0=0, select bank0
   505  0033  1303               	bcf	3,6	;RP1=0, select bank0
   506  0034  081E               	movf	30,w	;volatile
   507  0035  00A3               	movwf	??_main
   508  0036  0823               	movf	??_main,w
   509  0037  00F0               	movwf	_stemp
   510  0038                     l1007:
   511                           
   512                           ;STEMPsrc.c: 93: }
   513  0038  01F2               	clrf	_ADC
   514  0039                     l1009:
   515                           
   516                           ;STEMPsrc.c: 94: 
   517  0039  30C7               	movlw	199
   518  003A  1283               	bcf	3,5	;RP0=0, select bank0
   519  003B  1303               	bcf	3,6	;RP1=0, select bank0
   520  003C  00A3               	movwf	??_main
   521  003D                     u267:
   522  003D  283E               	nop2
   523  003E  0BA3               	decfsz	??_main,f
   524  003F  283D               	goto	u267
   525  0040  2841               	nop2
   526  0041                     l1011:
   527                           
   528                           ;STEMPsrc.c: 95: 
   529  0041  1283               	bcf	3,5	;RP0=0, select bank0
   530  0042  1303               	bcf	3,6	;RP1=0, select bank0
   531  0043  149F               	bsf	31,1	;volatile
   532  0044                     l1013:
   533                           
   534                           ;STEMPsrc.c: 98: 
   535  0044  3040               	movlw	64
   536  0045  0270               	subwf	_stemp,w
   537  0046  1803               	skipnc
   538  0047  2849               	goto	u211
   539  0048  284A               	goto	u210
   540  0049                     u211:
   541  0049  2852               	goto	l1017
   542  004A                     u210:
   543  004A                     l1015:
   544                           
   545                           ;STEMPsrc.c: 99: 
   546  004A  1283               	bcf	3,5	;RP0=0, select bank0
   547  004B  1303               	bcf	3,6	;RP1=0, select bank0
   548  004C  1408               	bsf	8,0	;volatile
   549                           
   550                           ;STEMPsrc.c: 100: void setup(void) {
   551  004D  1088               	bcf	8,1	;volatile
   552                           
   553                           ;STEMPsrc.c: 101: 
   554  004E  1108               	bcf	8,2	;volatile
   555                           
   556                           ;STEMPsrc.c: 103:     PORTD = 0;
   557  004F  01F1               	clrf	_datatemp
   558  0050  0AF1               	incf	_datatemp,f
   559                           
   560                           ;STEMPsrc.c: 105:     TRISA = 1;
   561  0051  282D               	goto	l1003
   562  0052                     l1017:
   563  0052  303F               	movlw	63
   564  0053  0270               	subwf	_stemp,w
   565  0054  1C03               	skipc
   566  0055  2857               	goto	u221
   567  0056  2858               	goto	u220
   568  0057                     u221:
   569  0057  2868               	goto	l1025
   570  0058                     u220:
   571  0058                     l1019:
   572  0058  3046               	movlw	70
   573  0059  0270               	subwf	_stemp,w
   574  005A  1803               	skipnc
   575  005B  285D               	goto	u231
   576  005C  285E               	goto	u230
   577  005D                     u231:
   578  005D  2868               	goto	l1025
   579  005E                     u230:
   580  005E                     l1021:
   581                           
   582                           ;STEMPsrc.c: 108: 
   583  005E  1283               	bcf	3,5	;RP0=0, select bank0
   584  005F  1303               	bcf	3,6	;RP1=0, select bank0
   585  0060  1488               	bsf	8,1	;volatile
   586                           
   587                           ;STEMPsrc.c: 109: 
   588  0061  1008               	bcf	8,0	;volatile
   589                           
   590                           ;STEMPsrc.c: 110: 
   591  0062  1108               	bcf	8,2	;volatile
   592  0063                     l1023:
   593                           
   594                           ;STEMPsrc.c: 112: 
   595  0063  3002               	movlw	2
   596  0064  00A3               	movwf	??_main
   597  0065  0823               	movf	??_main,w
   598  0066  00F1               	movwf	_datatemp
   599                           
   600                           ;STEMPsrc.c: 113: 
   601  0067  282D               	goto	l1003
   602  0068                     l1025:
   603  0068  3045               	movlw	69
   604  0069  0270               	subwf	_stemp,w
   605  006A  1C03               	skipc
   606  006B  286D               	goto	u241
   607  006C  286E               	goto	u240
   608  006D                     u241:
   609  006D  2878               	goto	l1031
   610  006E                     u240:
   611  006E                     l1027:
   612                           
   613                           ;STEMPsrc.c: 116:     ADC = 0;
   614  006E  1283               	bcf	3,5	;RP0=0, select bank0
   615  006F  1303               	bcf	3,6	;RP1=0, select bank0
   616  0070  1088               	bcf	8,1	;volatile
   617                           
   618                           ;STEMPsrc.c: 117:     PORTC = 0;
   619  0071  1008               	bcf	8,0	;volatile
   620                           
   621                           ;STEMPsrc.c: 118:     data = 0;
   622  0072  1508               	bsf	8,2	;volatile
   623  0073                     l1029:
   624                           
   625                           ;STEMPsrc.c: 120: 
   626  0073  3003               	movlw	3
   627  0074  00A3               	movwf	??_main
   628  0075  0823               	movf	??_main,w
   629  0076  00F1               	movwf	_datatemp
   630                           
   631                           ;STEMPsrc.c: 121: 
   632  0077  282D               	goto	l1003
   633  0078                     l1031:
   634                           
   635                           ;STEMPsrc.c: 124:     ADCON0bits.ADCS = 0b01;
   636  0078  01F1               	clrf	_datatemp
   637  0079  282D               	goto	l1003
   638  007A  120A  118A  280C   	ljmp	start
   639  007D                     __end_of_main:
   640                           
   641                           	psect	text1
   642  007D                     __ptext1:	
   643 ;; *************** function _setup *****************
   644 ;; Defined at:
   645 ;;		line 139 in file "STEMPsrc.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0, pclath, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0
   662 ;;      Totals:         0       0       0       0       0
   663 ;;Total ram usage:        0 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    4
   666 ;; This function calls:
   667 ;;		_spiInit
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _setup
   675  007D                     _setup:
   676  007D                     l949:	
   677                           ;incstack = 0
   678                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   679                           
   680                           
   681                           ;STEMPsrc.c: 141:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   682  007D  1683               	bsf	3,5	;RP0=1, select bank1
   683  007E  1303               	bcf	3,6	;RP1=0, select bank1
   684  007F  0188               	clrf	8	;volatile
   685  0080  1283               	bcf	3,5	;RP0=0, select bank0
   686  0081  1303               	bcf	3,6	;RP1=0, select bank0
   687  0082  0188               	clrf	8	;volatile
   688  0083                     l951:
   689  0083  3001               	movlw	1
   690  0084  1683               	bsf	3,5	;RP0=1, select bank1
   691  0085  1303               	bcf	3,6	;RP1=0, select bank1
   692  0086  0085               	movwf	5	;volatile
   693  0087                     l953:
   694  0087  1683               	bsf	3,5	;RP0=1, select bank3
   695  0088  1703               	bsf	3,6	;RP1=1, select bank3
   696  0089  0188               	clrf	8	;volatile
   697  008A                     l955:
   698  008A  01F4               	clrf	_check0
   699  008B                     l957:
   700  008B  01F3               	clrf	_check1
   701  008C                     l959:
   702  008C  01F2               	clrf	_ADC
   703  008D                     l961:
   704  008D  1283               	bcf	3,5	;RP0=0, select bank0
   705  008E  1303               	bcf	3,6	;RP1=0, select bank0
   706  008F  0187               	clrf	7	;volatile
   707  0090                     l963:
   708  0090  01A5               	clrf	_data
   709  0091                     l965:
   710  0091  1683               	bsf	3,5	;RP0=1, select bank3
   711  0092  1703               	bsf	3,6	;RP1=1, select bank3
   712  0093  1508               	bsf	8,2	;volatile
   713  0094                     l967:
   714  0094  1283               	bcf	3,5	;RP0=0, select bank0
   715  0095  1303               	bcf	3,6	;RP1=0, select bank0
   716  0096  1105               	bcf	5,2	;volatile
   717  0097                     l969:
   718  0097  081F               	movf	31,w	;volatile
   719  0098  393F               	andlw	-193
   720  0099  3840               	iorlw	64
   721  009A  009F               	movwf	31	;volatile
   722  009B                     l971:
   723  009B  1683               	bsf	3,5	;RP0=1, select bank1
   724  009C  1303               	bcf	3,6	;RP1=0, select bank1
   725  009D  121F               	bcf	31,4	;volatile
   726  009E                     l973:
   727  009E  129F               	bcf	31,5	;volatile
   728  009F                     l975:
   729  009F  1283               	bcf	3,5	;RP0=0, select bank0
   730  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   731  00A1  081F               	movf	31,w	;volatile
   732  00A2  39C3               	andlw	-61
   733  00A3  3808               	iorlw	8
   734  00A4  009F               	movwf	31	;volatile
   735  00A5                     l977:
   736  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   737  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   738  00A7  139F               	bcf	31,7	;volatile
   739  00A8                     l979:
   740  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   741  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   742  00AA  141F               	bsf	31,0	;volatile
   743  00AB                     l981:
   744  00AB  130C               	bcf	12,6	;volatile
   745  00AC                     l983:
   746  00AC  1683               	bsf	3,5	;RP0=1, select bank1
   747  00AD  1303               	bcf	3,6	;RP1=0, select bank1
   748  00AE  170C               	bsf	12,6	;volatile
   749  00AF                     l985:
   750  00AF  170B               	bsf	11,6	;volatile
   751  00B0                     l987:
   752  00B0  178B               	bsf	11,7	;volatile
   753  00B1                     l989:
   754  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   755  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   756  00B3  118C               	bcf	12,3	;volatile
   757  00B4                     l991:
   758  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   759  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   760  00B6  158C               	bsf	12,3	;volatile
   761  00B7                     l993:
   762  00B7  1685               	bsf	5,5	;volatile
   763  00B8                     l995:
   764  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   765  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   766  00BA  01A0               	clrf	spiInit@sDataSample
   767  00BB  01A1               	clrf	spiInit@sClockIdle
   768  00BC  01A2               	clrf	spiInit@sTransmitEdge
   769  00BD  3024               	movlw	36
   770  00BE  120A  118A  20EB  120A  118A  	fcall	_spiInit
   771  00C3                     l83:
   772  00C3  0008               	return
   773  00C4                     __end_of_setup:
   774                           
   775                           	psect	text2
   776  00EB                     __ptext2:	
   777 ;; *************** function _spiInit *****************
   778 ;; Defined at:
   779 ;;		line 12 in file "SPI.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  sType           1    wreg     enum E1265
   782 ;;  sDataSample     1    0[BANK0 ] enum E1273
   783 ;;  sClockIdle      1    1[BANK0 ] enum E1277
   784 ;;  sTransmitEdg    1    2[BANK0 ] enum E1281
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  sType           1    4[COMMON] enum E1265
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       3       0       0       0
   797 ;;      Locals:         1       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0
   799 ;;      Totals:         1       3       0       0       0
   800 ;;Total ram usage:        4 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    3
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_setup
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           
   811                           ;psect for function _spiInit
   812  00EB                     _spiInit:
   813                           
   814                           ;incstack = 0
   815                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   816                           ;spiInit@sType stored from wreg
   817  00EB  00F9               	movwf	spiInit@sType
   818  00EC                     l939:
   819                           
   820                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   821  00EC  1683               	bsf	3,5	;RP0=1, select bank1
   822  00ED  1303               	bcf	3,6	;RP1=0, select bank1
   823  00EE  1287               	bcf	7,5	;volatile
   824                           
   825                           ;SPI.c: 15:     if(sType & 0b00000100)
   826  00EF  1D79               	btfss	spiInit@sType,2
   827  00F0  28F2               	goto	u191
   828  00F1  28F3               	goto	u190
   829  00F2                     u191:
   830  00F2  28FB               	goto	l945
   831  00F3                     u190:
   832  00F3                     l941:
   833                           
   834                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   835  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   836  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   837  00F5  0822               	movf	spiInit@sTransmitEdge,w
   838  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   839  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   840  00F8  0094               	movwf	20	;volatile
   841  00F9                     l943:
   842                           
   843                           ;SPI.c: 18:         TRISC3 = 1;
   844  00F9  1587               	bsf	7,3	;volatile
   845                           
   846                           ;SPI.c: 19:     }
   847  00FA  2903               	goto	l99
   848  00FB                     l945:
   849                           
   850                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   851  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   852  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   853  00FD  0820               	movf	spiInit@sDataSample,w
   854  00FE  0422               	iorwf	spiInit@sTransmitEdge,w
   855  00FF  1683               	bsf	3,5	;RP0=1, select bank1
   856  0100  1303               	bcf	3,6	;RP1=0, select bank1
   857  0101  0094               	movwf	20	;volatile
   858  0102                     l947:
   859                           
   860                           ;SPI.c: 23:         TRISC3 = 0;
   861  0102  1187               	bcf	7,3	;volatile
   862  0103                     l99:	
   863                           ;SPI.c: 24:     }
   864                           
   865                           
   866                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   867  0103  0879               	movf	spiInit@sType,w
   868  0104  1283               	bcf	3,5	;RP0=0, select bank0
   869  0105  1303               	bcf	3,6	;RP1=0, select bank0
   870  0106  0421               	iorwf	spiInit@sClockIdle,w
   871  0107  0094               	movwf	20	;volatile
   872  0108                     l100:
   873  0108  0008               	return
   874  0109                     __end_of_spiInit:
   875                           
   876                           	psect	text3
   877  00C4                     __ptext3:	
   878 ;; *************** function _ISR *****************
   879 ;; Defined at:
   880 ;;		line 64 in file "STEMPsrc.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0, pclath, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          3       0       0       0       0
   897 ;;      Totals:         3       0       0       0       0
   898 ;;Total ram usage:        3 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		_spiRead
   903 ;;		_spiWrite
   904 ;; This function is called by:
   905 ;;		Interrupt level 1
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _ISR
   911  00C4                     _ISR:
   912  00C4                     i1l895:
   913                           
   914                           ;STEMPsrc.c: 65: 
   915  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   916  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   917  00C6  1F0C               	btfss	12,6	;volatile
   918  00C7  28C9               	goto	u12_21
   919  00C8  28CA               	goto	u12_20
   920  00C9                     u12_21:
   921  00C9  28CD               	goto	i1l63
   922  00CA                     u12_20:
   923  00CA                     i1l897:
   924                           
   925                           ;STEMPsrc.c: 66:         }
   926  00CA  130C               	bcf	12,6	;volatile
   927                           
   928                           ;STEMPsrc.c: 67: 
   929  00CB  01F2               	clrf	_ADC
   930  00CC  0AF2               	incf	_ADC,f
   931  00CD                     i1l63:	
   932                           ;STEMPsrc.c: 68:         else if (stemp>=63 && stemp<=69){
   933                           
   934                           
   935                           ;STEMPsrc.c: 70:             PORTDbits.RD0 = 0;
   936  00CD  1D8C               	btfss	12,3	;volatile
   937  00CE  28D0               	goto	u13_21
   938  00CF  28D1               	goto	u13_20
   939  00D0                     u13_21:
   940  00D0  28E4               	goto	i1l65
   941  00D1                     u13_20:
   942  00D1                     i1l899:
   943                           
   944                           ;STEMPsrc.c: 71:             PORTDbits.RD2 = 0;
   945  00D1  120A  118A  2109  120A  118A  	fcall	_spiRead
   946  00D6  00F6               	movwf	??_ISR
   947  00D7  0876               	movf	??_ISR,w
   948  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   949  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   950  00DA  00A5               	movwf	_data
   951                           
   952                           ;STEMPsrc.c: 72: 
   953  00DB  0871               	movf	_datatemp,w
   954  00DC  120A  118A  2119  120A  118A  	fcall	_spiWrite
   955  00E1                     i1l901:
   956                           
   957                           ;STEMPsrc.c: 73:             datatemp = 2;
   958  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   959  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   960  00E3  118C               	bcf	12,3	;volatile
   961  00E4                     i1l65:
   962  00E4  0878               	movf	??_ISR+2,w
   963  00E5  008A               	movwf	10
   964  00E6  0E77               	swapf	??_ISR+1,w
   965  00E7  0083               	movwf	3
   966  00E8  0EFE               	swapf	btemp,f
   967  00E9  0E7E               	swapf	btemp,w
   968  00EA  0009               	retfie
   969  00EB                     __end_of_ISR:
   970                           
   971                           	psect	intentry
   972  0004                     __pintentry:	
   973                           ;incstack = 0
   974                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   975                           
   976  0004                     interrupt_function:
   977  007E                     saved_w	set	btemp
   978  0004  00FE               	movwf	btemp
   979  0005  0E03               	swapf	3,w
   980  0006  00F7               	movwf	??_ISR+1
   981  0007  080A               	movf	10,w
   982  0008  00F8               	movwf	??_ISR+2
   983  0009  120A  118A  28C4   	ljmp	_ISR
   984                           
   985                           	psect	text4
   986  0119                     __ptext4:	
   987 ;; *************** function _spiWrite *****************
   988 ;; Defined at:
   989 ;;		line 34 in file "SPI.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  dat             1    wreg     unsigned char 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  dat             1    0[COMMON] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0
  1006 ;;      Totals:         1       0       0       0       0
  1007 ;;Total ram usage:        1 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_ISR
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _spiWrite
  1018  0119                     _spiWrite:
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _spiWrite: [wreg]
  1022                           ;spiWrite@dat stored from wreg
  1023  0119  00F5               	movwf	spiWrite@dat
  1024  011A                     i1l845:
  1025                           
  1026                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1027  011A  0875               	movf	spiWrite@dat,w
  1028  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1029  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1030  011D  0093               	movwf	19	;volatile
  1031  011E                     i1l109:
  1032  011E  0008               	return
  1033  011F                     __end_of_spiWrite:
  1034                           
  1035                           	psect	text5
  1036  0109                     __ptext5:	
  1037 ;; *************** function _spiRead *****************
  1038 ;; Defined at:
  1039 ;;		line 47 in file "SPI.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      unsigned char 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0
  1056 ;;      Totals:         0       0       0       0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    1
  1060 ;; This function calls:
  1061 ;;		_spiReceiveWait
  1062 ;; This function is called by:
  1063 ;;		_ISR
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _spiRead
  1069  0109                     _spiRead:
  1070  0109                     i1l839:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1073                           
  1074                           
  1075                           ;SPI.c: 49:     spiReceiveWait();
  1076  0109  120A  118A  2112  120A  118A  	fcall	_spiReceiveWait
  1077  010E                     i1l841:
  1078                           
  1079                           ;SPI.c: 50:     return(SSPBUF);
  1080  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1081  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0110  0813               	movf	19,w	;volatile
  1083  0111                     i1l117:
  1084  0111  0008               	return
  1085  0112                     __end_of_spiRead:
  1086                           
  1087                           	psect	text6
  1088  0112                     __ptext6:	
  1089 ;; *************** function _spiReceiveWait *****************
  1090 ;; Defined at:
  1091 ;;		line 29 in file "SPI.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		None
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1105 ;;      Params:         0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0
  1108 ;;      Totals:         0       0       0       0       0
  1109 ;;Total ram usage:        0 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_spiRead
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           
  1119                           ;psect for function _spiReceiveWait
  1120  0112                     _spiReceiveWait:
  1121  0112                     i1l837:	
  1122                           ;incstack = 0
  1123                           ; Regs used in _spiReceiveWait: []
  1124                           
  1125  0112                     i1l103:	
  1126                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1127                           
  1128  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1129  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1130  0114  1C14               	btfss	20,0	;volatile
  1131  0115  2917               	goto	u11_21
  1132  0116  2918               	goto	u11_20
  1133  0117                     u11_21:
  1134  0117  2912               	goto	i1l103
  1135  0118                     u11_20:
  1136  0118                     i1l106:
  1137  0118  0008               	return
  1138  0119                     __end_of_spiReceiveWait:
  1139  007E                     btemp	set	126	;btemp
  1140  007E                     wtemp0	set	126
  1141                           
  1142                           	psect	config
  1143                           
  1144                           ;Config register CONFIG1 @ 0x2007
  1145                           ;	Oscillator Selection bits
  1146                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1147                           ;	Watchdog Timer Enable bit
  1148                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1149                           ;	Power-up Timer Enable bit
  1150                           ;	PWRTE = OFF, PWRT disabled
  1151                           ;	RE3/MCLR pin function select bit
  1152                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1153                           ;	Code Protection bit
  1154                           ;	CP = OFF, Program memory code protection is disabled
  1155                           ;	Data Code Protection bit
  1156                           ;	CPD = OFF, Data memory code protection is disabled
  1157                           ;	Brown Out Reset Selection bits
  1158                           ;	BOREN = OFF, BOR disabled
  1159                           ;	Internal External Switchover bit
  1160                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1161                           ;	Fail-Safe Clock Monitor Enabled bit
  1162                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1163                           ;	Low Voltage Programming Enable bit
  1164                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1165                           ;	In-Circuit Debugger Mode bit
  1166                           ;	DEBUG = 0x1, unprogrammed default
  1167  2007                     	org	8199
  1168  2007  20F4               	dw	8436
  1169                           
  1170                           ;Config register CONFIG2 @ 0x2008
  1171                           ;	Brown-out Reset Selection bit
  1172                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1173                           ;	Flash Program Memory Self Write Enable bits
  1174                           ;	WRT = OFF, Write protection off
  1175  2008                     	org	8200
  1176  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      4       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     456
                                              3 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:49:58 2021

            _SSPSTATbits 0094                       l83 00C3                       l99 0103  
                    l100 0108                      _ADC 0072                      l941 00F3  
                    l943 00F9                      l951 0083                      l945 00FB  
                    l961 008D                      l953 0087                      l947 0102  
                    l939 00EC                      l971 009B                      l963 0090  
                    l955 008A                      l981 00AB                      l973 009E  
                    l965 0091                      l957 008B                      l949 007D  
                    l991 00B4                      l983 00AC                      l975 009F  
                    l967 0094                      l959 008C                      l993 00B7  
                    l985 00AF                      l977 00A5                      l969 0097  
                    l995 00B8                      l987 00B0                      l979 00A8  
                    l989 00B1                      l997 001D                      l999 0022  
                    u200 0032                      u201 0031                      u210 004A  
                    u211 0049                      u220 0058                      u221 0057  
                    u230 005E                      u231 005D                      u240 006E  
                    u241 006D                      u190 00F3                      u191 00F2  
                    u257 0026                      u267 003D                      _ISR 00C4  
                   ?_ISR 0075                     l1001 002A                     l1011 0041  
                   l1003 002D                     l1021 005E                     l1005 0032  
                   l1013 0044                     l1031 0078                     l1023 0063  
                   l1015 004A                     l1007 0038                     l1025 0068  
                   l1017 0052                     l1009 0039                     l1027 006E  
                   l1019 0058                     l1029 0073                     i1l63 00CD  
                   i1l65 00E4                     _data 0025                     _main 001D  
                   btemp 007E                     start 000C                    ??_ISR 0076  
                  ?_main 0075                    _ANSEL 0188                    i1l103 0112  
                  i1l106 0118                    i1l117 0111                    i1l109 011E  
                  i1l901 00E1                    i1l841 010E                    i1l837 0112  
                  i1l845 011A                    i1l839 0109                    i1l895 00C4  
                  i1l897 00CA                    i1l899 00D1                    u11_20 0118  
                  u11_21 0117                    u12_20 00CA                    u12_21 00C9  
                  u13_20 00D1                    u13_21 00D0                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  _SSPIF 0063                    _setup 007D                    _stemp 0070  
                  pclath 000A          __end_of_spiInit 0109          __end_of_spiRead 0112  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 007D                   ??_main 0023                   _ADRESH 001E  
                 ?_setup 0075                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _check0 0074  
                 _check1 0073                   saved_w 007E         __end_of_spiWrite 011F  
              ??_spiInit 0079                ??_spiRead 0075  __end_of__initialization 0019  
         __pcstackCOMMON 0075            __end_of_setup 00C4                  ??_setup 007A  
             __pbssBANK0 0024               __pmaintext 001D               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0075  
              _ADCresult 0026                _ANSELbits 0188                  __ptext1 007D  
                __ptext2 00EB                  __ptext3 00C4                  __ptext4 0119  
                __ptext5 0109                  __ptext6 0112             __size_of_ISR 0027  
                _spiInit 00EB                  _spiRead 0109     end_of_initialization 0019  
             ??_spiWrite 0075                _PORTAbits 0005                _PORTDbits 0008  
              _TRISAbits 0085              spiWrite@dat 0075           _spiReceiveWait 0112  
    start_initialization 000F              __end_of_ISR 00EB   __end_of_spiReceiveWait 0119  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0075        __size_of_spiWrite 0006                 ?_spiInit 0020  
               ?_spiRead 0075           __size_of_setup 0047     spiInit@sTransmitEdge 0022  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0020  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _datatemp 0071         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 0060                 _sevenval 0024                 _spiWrite 0119  
           spiInit@sType 0079        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0075  
