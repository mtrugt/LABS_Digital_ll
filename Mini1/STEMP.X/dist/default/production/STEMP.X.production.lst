

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 11:52:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0005                     _PORTAbits	set	5
   205  0007                     _PORTC	set	7
   206  0008                     _PORTD	set	8
   207  0008                     _PORTDbits	set	8
   208  001E                     _ADRESH	set	30
   209  001F                     _ADCON0bits	set	31
   210  000B                     _INTCONbits	set	11
   211  000C                     _PIR1bits	set	12
   212  008C                     _PIE1bits	set	140
   213  009F                     _ADCON1bits	set	159
   214  0085                     _TRISA	set	133
   215  0088                     _TRISD	set	136
   216  0188                     _ANSELbits	set	392
   217  0188                     _ANSEL	set	392
   218                           
   219                           	psect	cinit
   220  000F                     start_initialization:	
   221                           ; #config settings
   222                           
   223  000F                     __initialization:
   224                           
   225                           ; Clear objects allocated to COMMON
   226  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   227  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   228  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   229  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   230  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   231  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   232  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   233  0016                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  0016                     __end_of__initialization:
   237  0016  0183               	clrf	3
   238  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  0070                     __pbssCOMMON:
   242  0070                     _stemp:
   243  0070                     	ds	1
   244  0071                     _multiplex:
   245  0071                     	ds	1
   246  0072                     _sevenval:
   247  0072                     	ds	1
   248  0073                     _ADCresult:
   249  0073                     	ds	1
   250  0074                     _ADC:
   251  0074                     	ds	1
   252  0075                     _check1:
   253  0075                     	ds	1
   254  0076                     _check0:
   255  0076                     	ds	1
   256                           
   257                           	psect	cstackCOMMON
   258  0077                     __pcstackCOMMON:
   259  0077                     ?_setup:
   260  0077                     ?_ISR:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0077                     ??_ISR:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0077                     ?_main:	
   267                           ; 1 bytes @ 0x0
   268                           
   269                           
   270                           ; 1 bytes @ 0x0
   271  0077                     	ds	2
   272  0079                     ??_setup:
   273  0079                     ??_main:	
   274                           ; 1 bytes @ 0x2
   275                           
   276                           
   277                           ; 1 bytes @ 0x2
   278  0079                     	ds	1
   279                           
   280                           	psect	maintext
   281  001A                     __pmaintext:	
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 85 in file "STEMPsrc.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0
   303 ;;      Temps:          1       0       0       0       0
   304 ;;      Totals:         1       0       0       0       0
   305 ;;Total ram usage:        1 bytes
   306 ;; Hardware stack levels required when called:    2
   307 ;; This function calls:
   308 ;;		_setup
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           
   315                           ;psect for function _main
   316  001A                     _main:
   317  001A                     l721:	
   318                           ;incstack = 0
   319                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   320                           
   321                           
   322                           ;STEMPsrc.c: 86: 
   323  001A  120A  118A  206D  120A  118A  	fcall	_setup
   324  001F                     l723:
   325                           
   326                           ;STEMPsrc.c: 87: 
   327  001F  30C7               	movlw	199
   328  0020  00F9               	movwf	??_main
   329  0021                     u107:
   330  0021  2822               	nop2
   331  0022  0BF9               	decfsz	??_main,f
   332  0023  2821               	goto	u107
   333  0024  2825               	nop2
   334  0025  2826               	nop2
   335  0026                     l725:
   336                           
   337                           ;STEMPsrc.c: 88: }
   338  0026  1283               	bcf	3,5	;RP0=0, select bank0
   339  0027  1303               	bcf	3,6	;RP1=0, select bank0
   340  0028  149F               	bsf	31,1	;volatile
   341  0029                     l727:
   342                           
   343                           ;STEMPsrc.c: 93: 
   344  0029  0374               	decf	_ADC,w
   345  002A  1D03               	btfss	3,2
   346  002B  282D               	goto	u51
   347  002C  282E               	goto	u50
   348  002D                     u51:
   349  002D  283F               	goto	l737
   350  002E                     u50:
   351  002E                     l729:
   352                           
   353                           ;STEMPsrc.c: 94: 
   354  002E  1283               	bcf	3,5	;RP0=0, select bank0
   355  002F  1303               	bcf	3,6	;RP1=0, select bank0
   356  0030  081E               	movf	30,w	;volatile
   357  0031  00F9               	movwf	??_main
   358  0032  0879               	movf	??_main,w
   359  0033  00F0               	movwf	_stemp
   360  0034                     l731:
   361                           
   362                           ;STEMPsrc.c: 95: void setup(void) {
   363  0034  01F4               	clrf	_ADC
   364  0035                     l733:
   365                           
   366                           ;STEMPsrc.c: 96: 
   367  0035  30C7               	movlw	199
   368  0036  00F9               	movwf	??_main
   369  0037                     u117:
   370  0037  2838               	nop2
   371  0038  0BF9               	decfsz	??_main,f
   372  0039  2837               	goto	u117
   373  003A  283B               	nop2
   374  003B  283C               	nop2
   375  003C                     l735:
   376                           
   377                           ;STEMPsrc.c: 97:     TRISD = 0;
   378  003C  1283               	bcf	3,5	;RP0=0, select bank0
   379  003D  1303               	bcf	3,6	;RP1=0, select bank0
   380  003E  149F               	bsf	31,1	;volatile
   381  003F                     l737:
   382                           
   383                           ;STEMPsrc.c: 100:     TRISA = 1;
   384  003F  3040               	movlw	64
   385  0040  0270               	subwf	_stemp,w
   386  0041  1803               	skipnc
   387  0042  2844               	goto	u61
   388  0043  2845               	goto	u60
   389  0044                     u61:
   390  0044  284B               	goto	l741
   391  0045                     u60:
   392  0045                     l739:
   393                           
   394                           ;STEMPsrc.c: 101:     ANSEL = 0;
   395  0045  1283               	bcf	3,5	;RP0=0, select bank0
   396  0046  1303               	bcf	3,6	;RP1=0, select bank0
   397  0047  1408               	bsf	8,0	;volatile
   398                           
   399                           ;STEMPsrc.c: 102: 
   400  0048  1088               	bcf	8,1	;volatile
   401                           
   402                           ;STEMPsrc.c: 103: 
   403  0049  1108               	bcf	8,2	;volatile
   404                           
   405                           ;STEMPsrc.c: 104: 
   406  004A  2829               	goto	l727
   407  004B                     l741:
   408  004B  303F               	movlw	63
   409  004C  0270               	subwf	_stemp,w
   410  004D  1C03               	skipc
   411  004E  2850               	goto	u71
   412  004F  2851               	goto	u70
   413  0050                     u71:
   414  0050  285D               	goto	l747
   415  0051                     u70:
   416  0051                     l743:
   417  0051  3046               	movlw	70
   418  0052  0270               	subwf	_stemp,w
   419  0053  1803               	skipnc
   420  0054  2856               	goto	u81
   421  0055  2857               	goto	u80
   422  0056                     u81:
   423  0056  285D               	goto	l747
   424  0057                     u80:
   425  0057                     l745:
   426                           
   427                           ;STEMPsrc.c: 107: 
   428  0057  1283               	bcf	3,5	;RP0=0, select bank0
   429  0058  1303               	bcf	3,6	;RP1=0, select bank0
   430  0059  1488               	bsf	8,1	;volatile
   431                           
   432                           ;STEMPsrc.c: 108: 
   433  005A  1008               	bcf	8,0	;volatile
   434                           
   435                           ;STEMPsrc.c: 109:     check0 = 0;
   436  005B  1108               	bcf	8,2	;volatile
   437                           
   438                           ;STEMPsrc.c: 110:     check1 = 0;
   439  005C  2829               	goto	l727
   440  005D                     l747:
   441  005D  3045               	movlw	69
   442  005E  0270               	subwf	_stemp,w
   443  005F  1C03               	skipc
   444  0060  2862               	goto	u91
   445  0061  2863               	goto	u90
   446  0062                     u91:
   447  0062  2869               	goto	l66
   448  0063                     u90:
   449  0063                     l749:
   450                           
   451                           ;STEMPsrc.c: 113:     PORTC = 0;
   452  0063  1283               	bcf	3,5	;RP0=0, select bank0
   453  0064  1303               	bcf	3,6	;RP1=0, select bank0
   454  0065  1088               	bcf	8,1	;volatile
   455                           
   456                           ;STEMPsrc.c: 114: 
   457  0066  1008               	bcf	8,0	;volatile
   458                           
   459                           ;STEMPsrc.c: 115: 
   460  0067  1508               	bsf	8,2	;volatile
   461  0068  2829               	goto	l727
   462  0069                     l66:
   463  0069  2829               	goto	l727
   464  006A  120A  118A  280C   	ljmp	start
   465  006D                     __end_of_main:
   466                           
   467                           	psect	text1
   468  006D                     __ptext1:	
   469 ;; *************** function _setup *****************
   470 ;; Defined at:
   471 ;;		line 130 in file "STEMPsrc.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _setup
   501  006D                     _setup:
   502  006D                     l667:	
   503                           ;incstack = 0
   504                           ; Regs used in _setup: [wreg+status,2+status,0]
   505                           
   506  006D  1683               	bsf	3,5	;RP0=1, select bank1
   507  006E  1303               	bcf	3,6	;RP1=0, select bank1
   508  006F  0188               	clrf	8	;volatile
   509  0070  1283               	bcf	3,5	;RP0=0, select bank0
   510  0071  1303               	bcf	3,6	;RP1=0, select bank0
   511  0072  0188               	clrf	8	;volatile
   512  0073                     l669:
   513  0073  3001               	movlw	1
   514  0074  1683               	bsf	3,5	;RP0=1, select bank1
   515  0075  1303               	bcf	3,6	;RP1=0, select bank1
   516  0076  0085               	movwf	5	;volatile
   517  0077                     l671:
   518  0077  1683               	bsf	3,5	;RP0=1, select bank3
   519  0078  1703               	bsf	3,6	;RP1=1, select bank3
   520  0079  0188               	clrf	8	;volatile
   521  007A                     l673:
   522  007A  01F6               	clrf	_check0
   523  007B                     l675:
   524  007B  01F5               	clrf	_check1
   525  007C                     l677:
   526  007C  01F4               	clrf	_ADC
   527  007D                     l679:
   528  007D  01F1               	clrf	_multiplex
   529  007E                     l681:
   530  007E  1283               	bcf	3,5	;RP0=0, select bank0
   531  007F  1303               	bcf	3,6	;RP1=0, select bank0
   532  0080  0187               	clrf	7	;volatile
   533  0081                     l683:
   534  0081  1683               	bsf	3,5	;RP0=1, select bank3
   535  0082  1703               	bsf	3,6	;RP1=1, select bank3
   536  0083  1508               	bsf	8,2	;volatile
   537  0084                     l685:
   538  0084  1283               	bcf	3,5	;RP0=0, select bank0
   539  0085  1303               	bcf	3,6	;RP1=0, select bank0
   540  0086  1105               	bcf	5,2	;volatile
   541  0087                     l687:
   542  0087  081F               	movf	31,w	;volatile
   543  0088  393F               	andlw	-193
   544  0089  3840               	iorlw	64
   545  008A  009F               	movwf	31	;volatile
   546  008B                     l689:
   547  008B  1683               	bsf	3,5	;RP0=1, select bank1
   548  008C  1303               	bcf	3,6	;RP1=0, select bank1
   549  008D  121F               	bcf	31,4	;volatile
   550  008E                     l691:
   551  008E  129F               	bcf	31,5	;volatile
   552  008F                     l693:
   553  008F  1283               	bcf	3,5	;RP0=0, select bank0
   554  0090  1303               	bcf	3,6	;RP1=0, select bank0
   555  0091  081F               	movf	31,w	;volatile
   556  0092  39C3               	andlw	-61
   557  0093  3808               	iorlw	8
   558  0094  009F               	movwf	31	;volatile
   559  0095                     l695:
   560  0095  1683               	bsf	3,5	;RP0=1, select bank1
   561  0096  1303               	bcf	3,6	;RP1=0, select bank1
   562  0097  139F               	bcf	31,7	;volatile
   563  0098                     l697:
   564  0098  1283               	bcf	3,5	;RP0=0, select bank0
   565  0099  1303               	bcf	3,6	;RP1=0, select bank0
   566  009A  141F               	bsf	31,0	;volatile
   567  009B                     l699:
   568  009B  130C               	bcf	12,6	;volatile
   569  009C                     l701:
   570  009C  1683               	bsf	3,5	;RP0=1, select bank1
   571  009D  1303               	bcf	3,6	;RP1=0, select bank1
   572  009E  170C               	bsf	12,6	;volatile
   573  009F                     l703:
   574  009F  170B               	bsf	11,6	;volatile
   575  00A0                     l705:
   576  00A0  178B               	bsf	11,7	;volatile
   577  00A1                     l75:
   578  00A1  0008               	return
   579  00A2                     __end_of_setup:
   580                           
   581                           	psect	text2
   582  00A2                     __ptext2:	
   583 ;; *************** function _ISR *****************
   584 ;; Defined at:
   585 ;;		line 61 in file "STEMPsrc.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          2       0       0       0       0
   602 ;;      Totals:         2       0       0       0       0
   603 ;;Total ram usage:        2 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		Interrupt level 1
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           
   613                           ;psect for function _ISR
   614  00A2                     _ISR:
   615  00A2                     i1l707:
   616                           
   617                           ;STEMPsrc.c: 62:             ADCON0bits.GO_DONE = 1;
   618  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   619  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   620  00A4  1F0C               	btfss	12,6	;volatile
   621  00A5  28A7               	goto	u1_21
   622  00A6  28A8               	goto	u1_20
   623  00A7                     u1_21:
   624  00A7  28AB               	goto	i1l53
   625  00A8                     u1_20:
   626  00A8                     i1l709:
   627                           
   628                           ;STEMPsrc.c: 63:         }
   629  00A8  130C               	bcf	12,6	;volatile
   630                           
   631                           ;STEMPsrc.c: 64: 
   632  00A9  01F4               	clrf	_ADC
   633  00AA  0AF4               	incf	_ADC,f
   634  00AB                     i1l53:	
   635                           ;STEMPsrc.c: 65:         if (stemp <= 63){
   636                           
   637                           
   638                           ;STEMPsrc.c: 67:             PORTDbits.RD1 = 0;
   639  00AB  1D0B               	btfss	11,2	;volatile
   640  00AC  28AE               	goto	u2_21
   641  00AD  28AF               	goto	u2_20
   642  00AE                     u2_21:
   643  00AE  28BE               	goto	i1l58
   644  00AF                     u2_20:
   645  00AF                     i1l711:
   646                           
   647                           ;STEMPsrc.c: 68:             PORTDbits.RD2 = 0;
   648  00AF  110B               	bcf	11,2	;volatile
   649  00B0                     i1l713:
   650                           
   651                           ;STEMPsrc.c: 69:         }
   652  00B0  0871               	movf	_multiplex,w
   653  00B1  1D03               	btfss	3,2
   654  00B2  28B4               	goto	u3_21
   655  00B3  28B5               	goto	u3_20
   656  00B4                     u3_21:
   657  00B4  28B8               	goto	i1l717
   658  00B5                     u3_20:
   659  00B5                     i1l715:
   660                           
   661                           ;STEMPsrc.c: 70: 
   662  00B5  01F1               	clrf	_multiplex
   663  00B6  0AF1               	incf	_multiplex,f
   664                           
   665                           ;STEMPsrc.c: 71:         else if (stemp>=63 && stemp<=69){
   666  00B7  28BE               	goto	i1l58
   667  00B8                     i1l717:
   668  00B8  0371               	decf	_multiplex,w
   669  00B9  1D03               	btfss	3,2
   670  00BA  28BC               	goto	u4_21
   671  00BB  28BD               	goto	u4_20
   672  00BC                     u4_21:
   673  00BC  28BE               	goto	i1l58
   674  00BD                     u4_20:
   675  00BD                     i1l719:
   676                           
   677                           ;STEMPsrc.c: 74:             PORTDbits.RD2 = 0;
   678  00BD  01F1               	clrf	_multiplex
   679  00BE                     i1l58:
   680  00BE  0878               	movf	??_ISR+1,w
   681  00BF  008A               	movwf	10
   682  00C0  0E77               	swapf	??_ISR,w
   683  00C1  0083               	movwf	3
   684  00C2  0EFE               	swapf	btemp,f
   685  00C3  0E7E               	swapf	btemp,w
   686  00C4  0009               	retfie
   687  00C5                     __end_of_ISR:
   688  007E                     btemp	set	126	;btemp
   689  007E                     wtemp0	set	126
   690                           
   691                           	psect	intentry
   692  0004                     __pintentry:	
   693                           ;incstack = 0
   694                           ; Regs used in _ISR: [wreg+status,2+status,0]
   695                           
   696  0004                     interrupt_function:
   697  007E                     saved_w	set	btemp
   698  0004  00FE               	movwf	btemp
   699  0005  0E03               	swapf	3,w
   700  0006  00F7               	movwf	??_ISR
   701  0007  080A               	movf	10,w
   702  0008  00F8               	movwf	??_ISR+1
   703  0009  120A  118A  28A2   	ljmp	_ISR
   704                           
   705                           	psect	config
   706                           
   707                           ;Config register CONFIG1 @ 0x2007
   708                           ;	Oscillator Selection bits
   709                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   710                           ;	Watchdog Timer Enable bit
   711                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   712                           ;	Power-up Timer Enable bit
   713                           ;	PWRTE = OFF, PWRT disabled
   714                           ;	RE3/MCLR pin function select bit
   715                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   716                           ;	Code Protection bit
   717                           ;	CP = OFF, Program memory code protection is disabled
   718                           ;	Data Code Protection bit
   719                           ;	CPD = OFF, Data memory code protection is disabled
   720                           ;	Brown Out Reset Selection bits
   721                           ;	BOREN = OFF, BOR disabled
   722                           ;	Internal External Switchover bit
   723                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   724                           ;	Fail-Safe Clock Monitor Enabled bit
   725                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   726                           ;	Low Voltage Programming Enable bit
   727                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   728                           ;	In-Circuit Debugger Mode bit
   729                           ;	DEBUG = 0x1, unprogrammed default
   730  2007                     	org	8199
   731  2007  20F4               	dw	8436
   732                           
   733                           ;Config register CONFIG2 @ 0x2008
   734                           ;	Brown-out Reset Selection bit
   735                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   736                           ;	Flash Program Memory Self Write Enable bits
   737                           ;	WRT = OFF, Write protection off
   738  2008                     	org	8200
   739  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              2 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 11:52:42 2021

                     l66 0069                       l75 00A1                       u50 002E  
                     u51 002D                       u60 0045                       u61 0044  
                     u70 0051                       u71 0050                       u80 0057  
                     u81 0056                       u90 0063                       u91 0062  
                    _ADC 0074                      l701 009C                      l703 009F  
                    l705 00A0                      l721 001A                      l731 0034  
                    l723 001F                      l741 004B                      l733 0035  
                    l725 0026                      l671 0077                      l743 0051  
                    l735 003C                      l727 0029                      l681 007E  
                    l673 007A                      l745 0057                      l729 002E  
                    l737 003F                      l691 008E                      l683 0081  
                    l675 007B                      l667 006D                      l747 005D  
                    l739 0045                      l693 008F                      l685 0084  
                    l677 007C                      l669 0073                      l749 0063  
                    l695 0095                      l687 0087                      l679 007D  
                    l697 0098                      l689 008B                      l699 009B  
                    u107 0021                      u117 0037                      _ISR 00A2  
                   ?_ISR 0077                     i1l53 00AB                     i1l58 00BE  
                   u1_20 00A8                     u1_21 00A7                     u2_20 00AF  
                   u2_21 00AE                     u3_20 00B5                     u3_21 00B4  
                   u4_20 00BD                     u4_21 00BC                     _main 001A  
                   btemp 007E                     start 000C                    ??_ISR 0077  
                  ?_main 0077                    _ANSEL 0188                    i1l711 00AF  
                  i1l713 00B0                    i1l715 00B5                    i1l707 00A2  
                  i1l717 00B8                    i1l709 00A8                    i1l719 00BD  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088                    _setup 006D                    _stemp 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 006D                   ??_main 0079  
                 _ADRESH 001E                   ?_setup 0077                   _check0 0076  
                 _check1 0075                   saved_w 007E  __end_of__initialization 0016  
         __pcstackCOMMON 0077            __end_of_setup 00A2                  ??_setup 0079  
             __pmaintext 001A               __pintentry 0004                _ADCresult 0073  
              _ANSELbits 0188                  __ptext1 006D                  __ptext2 00A2  
           __size_of_ISR 0023     end_of_initialization 0016                _PORTAbits 0005  
              _PORTDbits 0008      start_initialization 000F              __end_of_ISR 00C5  
            __pbssCOMMON 0070                ___latbits 0002           __size_of_setup 0035  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
              _multiplex 0071               _ADCON0bits 001F               _ADCON1bits 009F  
          __size_of_main 0053                 _sevenval 0072               _INTCONbits 000B  
               intlevel1 0000  
