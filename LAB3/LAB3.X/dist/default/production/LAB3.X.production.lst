

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 17:01:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0008                     _PORTD	set	8
   290  0007                     _PORTCbits	set	7
   291  0087                     _TRISCbits	set	135
   292  0088                     _TRISD	set	136
   293                           
   294                           	psect	strings
   295  0003                     __pstrings:
   296  0003                     stringtab:
   297  0003                     __stringtab:
   298  0003                     stringcode:	
   299                           ;	String table - string pointers are 1 byte each
   300                           
   301  0003                     stringdir:
   302  0003  3000               	movlw	high stringdir
   303  0004  008A               	movwf	10
   304  0005  0804               	movf	4,w
   305  0006  0A84               	incf	4,f
   306  0007  0782               	addwf	2,f
   307  0008                     __stringbase:
   308  0008  3400               	retlw	0
   309  0009                     __end_of__stringtab:
   310  0009                     STR_2:
   311  0009  3448               	retlw	72	;'H'
   312  000A  344F               	retlw	79	;'O'
   313  000B  344C               	retlw	76	;'L'
   314  000C  3441               	retlw	65	;'A'
   315  000D  3420               	retlw	32	;' '
   316  000E  3462               	retlw	98	;'b'
   317  000F  3461               	retlw	97	;'a'
   318  0010  3462               	retlw	98	;'b'
   319  0011  3479               	retlw	121	;'y'
   320  0012  3400               	retlw	0
   321  0013                     STR_1:
   322  0013  3461               	retlw	97	;'a'
   323  0014  3400               	retlw	0
   324                           
   325                           	psect	cinit
   326  07F1                     start_initialization:	
   327                           ; #config settings
   328                           
   329  07F1                     __initialization:
   330                           
   331                           ; Clear objects allocated to COMMON
   332  07F1  01FA               	clrf	__pbssCOMMON& (0+127)
   333  07F2  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   334                           
   335                           ; Clear objects allocated to BANK0
   336  07F3  1383               	bcf	3,7	;select IRP bank0
   337  07F4  3020               	movlw	low __pbssBANK0
   338  07F5  0084               	movwf	4
   339  07F6  3030               	movlw	low (__pbssBANK0+16)
   340  07F7  120A  118A  26B2  120A  118A  	fcall	clear_ram0
   341  07FC                     end_of_initialization:	
   342                           ;End of C runtime variable initialization code
   343                           
   344  07FC                     __end_of__initialization:
   345  07FC  0183               	clrf	3
   346  07FD  120A  118A  2F2F   	ljmp	_main	;jump to C main() function
   347                           
   348                           	psect	bssCOMMON
   349  007A                     __pbssCOMMON:
   350  007A                     _check2:
   351  007A                     	ds	1
   352  007B                     _check1:
   353  007B                     	ds	1
   354                           
   355                           	psect	bssBANK0
   356  0020                     __pbssBANK0:
   357  0020                     _LCDstring:
   358  0020                     	ds	16
   359                           
   360                           	psect	clrtext
   361  06B2                     clear_ram0:	
   362                           ;	Called with FSR containing the base address, and
   363                           ;	W with the last address+1
   364                           
   365  06B2  0064               	clrwdt	;clear the watchdog before getting into this loop
   366  06B3                     clrloop0:
   367  06B3  0180               	clrf	0	;clear RAM location pointed to by FSR
   368  06B4  0A84               	incf	4,f	;increment pointer
   369  06B5  0604               	xorwf	4,w	;XOR with final address
   370  06B6  1903               	btfsc	3,2	;have we reached the end yet?
   371  06B7  3400               	retlw	0	;all done for this memory range, return
   372  06B8  0604               	xorwf	4,w	;XOR again to restore value
   373  06B9  2EB3               	goto	clrloop0	;do the next byte
   374                           
   375                           	psect	cstackCOMMON
   376  0070                     __pcstackCOMMON:
   377  0070                     ?_setup:
   378  0070                     ?_LCD_clear:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_LCD_Wstring:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_LCD_ini:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_main:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_LCD_cmd:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ??_LCD_cmd:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_LCD_Wchar:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ??_LCD_Wchar:	
   400                           ; 1 bytes @ 0x0
   401                           
   402                           
   403                           ; 1 bytes @ 0x0
   404  0070                     	ds	1
   405  0071                     LCD_Wchar@c:
   406                           
   407                           ; 1 bytes @ 0x1
   408  0071                     	ds	1
   409  0072                     ??_LCD_Wstring:
   410  0072                     LCD_cmd@cmd:	
   411                           ; 1 bytes @ 0x2
   412                           
   413  0072                     LCD_Wstring@i:	
   414                           ; 1 bytes @ 0x2
   415                           
   416                           
   417                           ; 2 bytes @ 0x2
   418  0072                     	ds	1
   419  0073                     ??_LCD_clear:
   420  0073                     ?_LCD_cursor:	
   421                           ; 1 bytes @ 0x3
   422                           
   423  0073                     ??_LCD_ini:	
   424                           ; 1 bytes @ 0x3
   425                           
   426  0073                     LCD_cursor@y:	
   427                           ; 1 bytes @ 0x3
   428                           
   429                           
   430                           ; 1 bytes @ 0x3
   431  0073                     	ds	1
   432  0074                     ??_LCD_cursor:
   433  0074                     LCD_Wstring@v:	
   434                           ; 1 bytes @ 0x4
   435                           
   436                           
   437                           ; 1 bytes @ 0x4
   438  0074                     	ds	1
   439  0075                     ??_setup:
   440  0075                     LCD_cursor@x:	
   441                           ; 1 bytes @ 0x5
   442                           
   443                           
   444                           ; 1 bytes @ 0x5
   445  0075                     	ds	1
   446  0076                     LCD_cursor@a:
   447                           
   448                           ; 1 bytes @ 0x6
   449  0076                     	ds	1
   450  0077                     ??_main:
   451                           
   452                           ; 1 bytes @ 0x7
   453  0077                     	ds	3
   454                           
   455                           	psect	maintext
   456  072F                     __pmaintext:	
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 61 in file "LAB3src.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : B00/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          3       0       0       0       0
   479 ;;      Totals:         3       0       0       0       0
   480 ;;Total ram usage:        3 bytes
   481 ;; Hardware stack levels required when called:    3
   482 ;; This function calls:
   483 ;;		_LCD_Wstring
   484 ;;		_LCD_clear
   485 ;;		_LCD_cursor
   486 ;;		_setup
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           
   493                           ;psect for function _main
   494  072F                     _main:
   495  072F                     l769:	
   496                           ;incstack = 0
   497                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   498                           
   499  072F  120A  118A  26BA  120A  118A  	fcall	_setup
   500  0734  120A  118A  26AB  120A  118A  	fcall	_LCD_clear
   501  0739  01F3               	clrf	LCD_cursor@y
   502  073A  0AF3               	incf	LCD_cursor@y,f
   503  073B  3001               	movlw	1
   504  073C  120A  118A  26E6  120A  118A  	fcall	_LCD_cursor
   505  0741                     l771:
   506  0741  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   507  0742  120A  118A  270A  120A  118A  	fcall	_LCD_Wstring
   508  0747                     l773:
   509  0747  3008               	movlw	8
   510  0748  00F9               	movwf	??_main+2
   511  0749  309D               	movlw	157
   512  074A  00F8               	movwf	??_main+1
   513  074B  3005               	movlw	5
   514  074C  00F7               	movwf	??_main
   515  074D                     u77:
   516  074D  0BF7               	decfsz	??_main,f
   517  074E  2F4D               	goto	u77
   518  074F  0BF8               	decfsz	??_main+1,f
   519  0750  2F4D               	goto	u77
   520  0751  0BF9               	decfsz	??_main+2,f
   521  0752  2F4D               	goto	u77
   522  0753  2F54               	nop2
   523  0754                     l775:
   524  0754  120A  118A  26AB  120A  118A  	fcall	_LCD_clear
   525  0759                     l777:
   526  0759  3002               	movlw	2
   527  075A  00F7               	movwf	??_main
   528  075B  0877               	movf	??_main,w
   529  075C  00F3               	movwf	LCD_cursor@y
   530  075D  3001               	movlw	1
   531  075E  120A  118A  26E6  120A  118A  	fcall	_LCD_cursor
   532  0763                     l779:
   533  0763  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   534  0764  120A  118A  270A  120A  118A  	fcall	_LCD_Wstring
   535  0769                     l781:
   536  0769  3008               	movlw	8
   537  076A  00F9               	movwf	??_main+2
   538  076B  309D               	movlw	157
   539  076C  00F8               	movwf	??_main+1
   540  076D  3005               	movlw	5
   541  076E  00F7               	movwf	??_main
   542  076F                     u87:
   543  076F  0BF7               	decfsz	??_main,f
   544  0770  2F6F               	goto	u87
   545  0771  0BF8               	decfsz	??_main+1,f
   546  0772  2F6F               	goto	u87
   547  0773  0BF9               	decfsz	??_main+2,f
   548  0774  2F6F               	goto	u87
   549  0775  2F76               	nop2
   550  0776                     l25:
   551  0776                     l26:
   552  0776  2F76               	goto	l25
   553  0777  120A  118A  2800   	ljmp	start
   554  077A                     __end_of_main:
   555                           
   556                           	psect	text1
   557  06BA                     __ptext1:	
   558 ;; *************** function _setup *****************
   559 ;; Defined at:
   560 ;;		line 82 in file "LAB3src.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0, pclath, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   574 ;;      Params:         0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    2
   581 ;; This function calls:
   582 ;;		_LCD_ini
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _setup
   590  06BA                     _setup:
   591  06BA                     l709:	
   592                           ;incstack = 0
   593                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   594                           
   595  06BA  1683               	bsf	3,5	;RP0=1, select bank1
   596  06BB  1303               	bcf	3,6	;RP1=0, select bank1
   597  06BC  0188               	clrf	8	;volatile
   598  06BD                     l711:
   599  06BD  120A  118A  277A  120A  118A  	fcall	_LCD_ini
   600  06C2                     l31:
   601  06C2  0008               	return
   602  06C3                     __end_of_setup:
   603                           
   604                           	psect	text2
   605  077A                     __ptext2:	
   606 ;; *************** function _LCD_ini *****************
   607 ;; Defined at:
   608 ;;		line 22 in file "LAB3lib.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          2       0       0       0       0
   625 ;;      Totals:         2       0       0       0       0
   626 ;;Total ram usage:        2 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    1
   629 ;; This function calls:
   630 ;;		_LCD_cmd
   631 ;; This function is called by:
   632 ;;		_setup
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _LCD_ini
   638  077A                     _LCD_ini:
   639  077A                     l665:	
   640                           ;incstack = 0
   641                           ; Regs used in _LCD_ini: [wreg+status,2+status,0+pclath+cstack]
   642                           
   643                           
   644                           ;LAB3lib.c: 23:     TRISD = 0;
   645  077A  1683               	bsf	3,5	;RP0=1, select bank1
   646  077B  1303               	bcf	3,6	;RP1=0, select bank1
   647  077C  0188               	clrf	8	;volatile
   648                           
   649                           ;LAB3lib.c: 24:     PORTD = 0;
   650  077D  1283               	bcf	3,5	;RP0=0, select bank0
   651  077E  1303               	bcf	3,6	;RP1=0, select bank0
   652  077F  0188               	clrf	8	;volatile
   653  0780                     l667:
   654                           
   655                           ;LAB3lib.c: 26:     TRISCbits.TRISC0 = 0;
   656  0780  1683               	bsf	3,5	;RP0=1, select bank1
   657  0781  1303               	bcf	3,6	;RP1=0, select bank1
   658  0782  1007               	bcf	7,0	;volatile
   659  0783                     l669:
   660                           
   661                           ;LAB3lib.c: 27:     TRISCbits.TRISC1 = 0;
   662  0783  1087               	bcf	7,1	;volatile
   663  0784                     l671:
   664                           
   665                           ;LAB3lib.c: 29:     _delay((unsigned long)((20)*(4000000/4000.0)));
   666  0784  301A               	movlw	26
   667  0785  00F4               	movwf	??_LCD_ini+1
   668  0786  30F8               	movlw	248
   669  0787  00F3               	movwf	??_LCD_ini
   670  0788                     u97:
   671  0788  0BF3               	decfsz	??_LCD_ini,f
   672  0789  2F88               	goto	u97
   673  078A  0BF4               	decfsz	??_LCD_ini+1,f
   674  078B  2F88               	goto	u97
   675  078C  0000               	nop
   676  078D                     l673:
   677                           
   678                           ;LAB3lib.c: 31:     PORTCbits.RC0 = 0;
   679  078D  1283               	bcf	3,5	;RP0=0, select bank0
   680  078E  1303               	bcf	3,6	;RP1=0, select bank0
   681  078F  1007               	bcf	7,0	;volatile
   682  0790                     l675:
   683                           
   684                           ;LAB3lib.c: 32:     LCD_cmd(0b00110000);
   685  0790  3030               	movlw	48
   686  0791  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   687  0796                     l677:
   688                           
   689                           ;LAB3lib.c: 34:     _delay((unsigned long)((6)*(4000000/4000.0)));
   690  0796  3008               	movlw	8
   691  0797  00F4               	movwf	??_LCD_ini+1
   692  0798  30C9               	movlw	201
   693  0799  00F3               	movwf	??_LCD_ini
   694  079A                     u107:
   695  079A  0BF3               	decfsz	??_LCD_ini,f
   696  079B  2F9A               	goto	u107
   697  079C  0BF4               	decfsz	??_LCD_ini+1,f
   698  079D  2F9A               	goto	u107
   699  079E  2F9F               	nop2
   700  079F                     l679:
   701                           
   702                           ;LAB3lib.c: 36:     LCD_cmd(0b00110000);
   703  079F  3030               	movlw	48
   704  07A0  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   705  07A5                     l681:
   706                           
   707                           ;LAB3lib.c: 38:     _delay((unsigned long)((11)*(4000000/4000.0)));
   708  07A5  300F               	movlw	15
   709  07A6  00F4               	movwf	??_LCD_ini+1
   710  07A7  3047               	movlw	71
   711  07A8  00F3               	movwf	??_LCD_ini
   712  07A9                     u117:
   713  07A9  0BF3               	decfsz	??_LCD_ini,f
   714  07AA  2FA9               	goto	u117
   715  07AB  0BF4               	decfsz	??_LCD_ini+1,f
   716  07AC  2FA9               	goto	u117
   717  07AD  2FAE               	nop2
   718  07AE                     l683:
   719                           
   720                           ;LAB3lib.c: 40:     LCD_cmd(0b00110000);
   721  07AE  3030               	movlw	48
   722  07AF  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   723  07B4                     l685:
   724                           
   725                           ;LAB3lib.c: 42:     _delay((unsigned long)((2)*(4000000/4000.0)));
   726  07B4  3003               	movlw	3
   727  07B5  00F4               	movwf	??_LCD_ini+1
   728  07B6  3097               	movlw	151
   729  07B7  00F3               	movwf	??_LCD_ini
   730  07B8                     u127:
   731  07B8  0BF3               	decfsz	??_LCD_ini,f
   732  07B9  2FB8               	goto	u127
   733  07BA  0BF4               	decfsz	??_LCD_ini+1,f
   734  07BB  2FB8               	goto	u127
   735  07BC  2FBD               	nop2
   736  07BD                     l687:
   737                           
   738                           ;LAB3lib.c: 44:     LCD_cmd(0b00111000);
   739  07BD  3038               	movlw	56
   740  07BE  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   741  07C3                     l689:
   742                           
   743                           ;LAB3lib.c: 45:     _delay((unsigned long)((2)*(4000000/4000.0)));
   744  07C3  3003               	movlw	3
   745  07C4  00F4               	movwf	??_LCD_ini+1
   746  07C5  3097               	movlw	151
   747  07C6  00F3               	movwf	??_LCD_ini
   748  07C7                     u137:
   749  07C7  0BF3               	decfsz	??_LCD_ini,f
   750  07C8  2FC7               	goto	u137
   751  07C9  0BF4               	decfsz	??_LCD_ini+1,f
   752  07CA  2FC7               	goto	u137
   753  07CB  2FCC               	nop2
   754  07CC                     l691:
   755                           
   756                           ;LAB3lib.c: 47:     LCD_cmd(0b00001100);
   757  07CC  300C               	movlw	12
   758  07CD  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   759  07D2                     l693:
   760                           
   761                           ;LAB3lib.c: 48:     _delay((unsigned long)((2)*(4000000/4000.0)));
   762  07D2  3003               	movlw	3
   763  07D3  00F4               	movwf	??_LCD_ini+1
   764  07D4  3097               	movlw	151
   765  07D5  00F3               	movwf	??_LCD_ini
   766  07D6                     u147:
   767  07D6  0BF3               	decfsz	??_LCD_ini,f
   768  07D7  2FD6               	goto	u147
   769  07D8  0BF4               	decfsz	??_LCD_ini+1,f
   770  07D9  2FD6               	goto	u147
   771  07DA  2FDB               	nop2
   772  07DB                     l695:
   773                           
   774                           ;LAB3lib.c: 50:     LCD_cmd(0b00000001);
   775  07DB  3001               	movlw	1
   776  07DC  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   777  07E1                     l697:
   778                           
   779                           ;LAB3lib.c: 51:     _delay((unsigned long)((2)*(4000000/4000.0)));
   780  07E1  3003               	movlw	3
   781  07E2  00F4               	movwf	??_LCD_ini+1
   782  07E3  3097               	movlw	151
   783  07E4  00F3               	movwf	??_LCD_ini
   784  07E5                     u157:
   785  07E5  0BF3               	decfsz	??_LCD_ini,f
   786  07E6  2FE5               	goto	u157
   787  07E7  0BF4               	decfsz	??_LCD_ini+1,f
   788  07E8  2FE5               	goto	u157
   789  07E9  2FEA               	nop2
   790  07EA                     l699:
   791                           
   792                           ;LAB3lib.c: 53:     LCD_cmd(0b00000110);
   793  07EA  3006               	movlw	6
   794  07EB  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   795  07F0                     l47:
   796  07F0  0008               	return
   797  07F1                     __end_of_LCD_ini:
   798                           
   799                           	psect	text3
   800  06E6                     __ptext3:	
   801 ;; *************** function _LCD_cursor *****************
   802 ;; Defined at:
   803 ;;		line 62 in file "LAB3lib.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  x               1    wreg     unsigned char 
   806 ;;  y               1    3[COMMON] unsigned char 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  x               1    5[COMMON] unsigned char 
   809 ;;  a               1    6[COMMON] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0, pclath, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         1       0       0       0       0
   820 ;;      Locals:         2       0       0       0       0
   821 ;;      Temps:          1       0       0       0       0
   822 ;;      Totals:         4       0       0       0       0
   823 ;;Total ram usage:        4 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; Hardware stack levels required when called:    1
   826 ;; This function calls:
   827 ;;		_LCD_cmd
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           
   834                           ;psect for function _LCD_cursor
   835  06E6                     _LCD_cursor:
   836                           
   837                           ;incstack = 0
   838                           ; Regs used in _LCD_cursor: [wreg+status,2+status,0+pclath+cstack]
   839                           ;LCD_cursor@x stored from wreg
   840  06E6  00F5               	movwf	LCD_cursor@x
   841  06E7                     l749:
   842                           
   843                           ;LAB3lib.c: 63:     uint8_t a;;LAB3lib.c: 64:  if(y == 1)
   844  06E7  0373               	decf	LCD_cursor@y,w
   845  06E8  1D03               	btfss	3,2
   846  06E9  2EEB               	goto	u41
   847  06EA  2EEC               	goto	u40
   848  06EB                     u41:
   849  06EB  2EF8               	goto	l755
   850  06EC                     u40:
   851  06EC                     l751:
   852                           
   853                           ;LAB3lib.c: 65:  {;LAB3lib.c: 66:    a = 0x80 + x - 1;
   854  06EC  0875               	movf	LCD_cursor@x,w
   855  06ED  3E7F               	addlw	127
   856  06EE  00F4               	movwf	??_LCD_cursor
   857  06EF  0874               	movf	??_LCD_cursor,w
   858  06F0  00F6               	movwf	LCD_cursor@a
   859  06F1                     l753:
   860                           
   861                           ;LAB3lib.c: 67:   LCD_cmd(a);
   862  06F1  0876               	movf	LCD_cursor@a,w
   863  06F2  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   864                           
   865                           ;LAB3lib.c: 68:  }
   866  06F7  2F09               	goto	l56
   867  06F8                     l755:
   868  06F8  3002               	movlw	2
   869  06F9  0673               	xorwf	LCD_cursor@y,w
   870  06FA  1D03               	btfss	3,2
   871  06FB  2EFD               	goto	u51
   872  06FC  2EFE               	goto	u50
   873  06FD                     u51:
   874  06FD  2F09               	goto	l56
   875  06FE                     u50:
   876  06FE                     l757:
   877                           
   878                           ;LAB3lib.c: 70:  {;LAB3lib.c: 71:   a = 0xC0 + x - 1;
   879  06FE  0875               	movf	LCD_cursor@x,w
   880  06FF  3EBF               	addlw	191
   881  0700  00F4               	movwf	??_LCD_cursor
   882  0701  0874               	movf	??_LCD_cursor,w
   883  0702  00F6               	movwf	LCD_cursor@a
   884  0703                     l759:
   885                           
   886                           ;LAB3lib.c: 72:   LCD_cmd(a);
   887  0703  0876               	movf	LCD_cursor@a,w
   888  0704  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   889  0709                     l56:
   890  0709  0008               	return
   891  070A                     __end_of_LCD_cursor:
   892                           
   893                           	psect	text4
   894  06AB                     __ptext4:	
   895 ;; *************** function _LCD_clear *****************
   896 ;; Defined at:
   897 ;;		line 57 in file "LAB3lib.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0, pclath, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:    1
   918 ;; This function calls:
   919 ;;		_LCD_cmd
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function _LCD_clear
   927  06AB                     _LCD_clear:
   928  06AB                     l713:	
   929                           ;incstack = 0
   930                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
   931                           
   932                           
   933                           ;LAB3lib.c: 59:     LCD_cmd(1);
   934  06AB  3001               	movlw	1
   935  06AC  120A  118A  26D2  120A  118A  	fcall	_LCD_cmd
   936  06B1                     l50:
   937  06B1  0008               	return
   938  06B2                     __end_of_LCD_clear:
   939                           
   940                           	psect	text5
   941  06D2                     __ptext5:	
   942 ;; *************** function _LCD_cmd *****************
   943 ;; Defined at:
   944 ;;		line 12 in file "LAB3lib.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  cmd             1    wreg     unsigned char 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  cmd             1    2[COMMON] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       0       0       0       0
   959 ;;      Locals:         1       0       0       0       0
   960 ;;      Temps:          2       0       0       0       0
   961 ;;      Totals:         3       0       0       0       0
   962 ;;Total ram usage:        3 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_LCD_ini
   968 ;;		_LCD_clear
   969 ;;		_LCD_cursor
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _LCD_cmd
   975  06D2                     _LCD_cmd:
   976                           
   977                           ;incstack = 0
   978                           ; Regs used in _LCD_cmd: [wreg]
   979                           ;LCD_cmd@cmd stored from wreg
   980  06D2  00F2               	movwf	LCD_cmd@cmd
   981  06D3                     l657:
   982                           
   983                           ;LAB3lib.c: 14:     PORTCbits.RC0 = 0;
   984  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   985  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   986  06D5  1007               	bcf	7,0	;volatile
   987  06D6                     l659:
   988                           
   989                           ;LAB3lib.c: 15:  PORTD = cmd;
   990  06D6  0872               	movf	LCD_cmd@cmd,w
   991  06D7  0088               	movwf	8	;volatile
   992  06D8                     l661:
   993                           
   994                           ;LAB3lib.c: 16:  PORTCbits.RC1 = 1;
   995  06D8  1487               	bsf	7,1	;volatile
   996                           
   997                           ;LAB3lib.c: 17:         _delay((unsigned long)((4)*(4000000/4000.0)));
   998  06D9  3006               	movlw	6
   999  06DA  00F1               	movwf	??_LCD_cmd+1
  1000  06DB  3030               	movlw	48
  1001  06DC  00F0               	movwf	??_LCD_cmd
  1002  06DD                     u167:
  1003  06DD  0BF0               	decfsz	??_LCD_cmd,f
  1004  06DE  2EDD               	goto	u167
  1005  06DF  0BF1               	decfsz	??_LCD_cmd+1,f
  1006  06E0  2EDD               	goto	u167
  1007  06E1  0000               	nop
  1008  06E2                     l663:
  1009                           
  1010                           ;LAB3lib.c: 18:         PORTCbits.RC1 = 0;
  1011  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1012  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1013  06E4  1087               	bcf	7,1	;volatile
  1014  06E5                     l44:
  1015  06E5  0008               	return
  1016  06E6                     __end_of_LCD_cmd:
  1017                           
  1018                           	psect	text6
  1019  070A                     __ptext6:	
  1020 ;; *************** function _LCD_Wstring *****************
  1021 ;; Defined at:
  1022 ;;		line 85 in file "LAB3lib.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  v               1    wreg     PTR unsigned char 
  1025 ;;		 -> STR_2(10), STR_1(2), 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  v               1    4[COMMON] PTR unsigned char 
  1028 ;;		 -> STR_2(10), STR_1(2), 
  1029 ;;  i               2    2[COMMON] int 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         3       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0
  1042 ;;      Totals:         3       0       0       0       0
  1043 ;;Total ram usage:        3 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    1
  1046 ;; This function calls:
  1047 ;;		_LCD_Wchar
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _LCD_Wstring
  1055  070A                     _LCD_Wstring:
  1056                           
  1057                           ;incstack = 0
  1058                           ; Regs used in _LCD_Wstring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1059                           ;LCD_Wstring@v stored from wreg
  1060  070A  00F4               	movwf	LCD_Wstring@v
  1061  070B                     l761:
  1062                           
  1063                           ;LAB3lib.c: 86:     int i;;LAB3lib.c: 87:  for(i=0;v[i]!='\0';i++)
  1064  070B  01F2               	clrf	LCD_Wstring@i
  1065  070C  01F3               	clrf	LCD_Wstring@i+1
  1066  070D  2F21               	goto	l767
  1067  070E                     l763:
  1068                           
  1069                           ;LAB3lib.c: 88:     LCD_Wchar(v[i]);
  1070  070E  0872               	movf	LCD_Wstring@i,w
  1071  070F  0774               	addwf	LCD_Wstring@v,w
  1072  0710  0084               	movwf	4
  1073  0711  120A  118A  2003  120A  118A  	fcall	stringdir
  1074  0716  120A  118A  26C3  120A  118A  	fcall	_LCD_Wchar
  1075  071B                     l765:
  1076  071B  3001               	movlw	1
  1077  071C  07F2               	addwf	LCD_Wstring@i,f
  1078  071D  1803               	skipnc
  1079  071E  0AF3               	incf	LCD_Wstring@i+1,f
  1080  071F  3000               	movlw	0
  1081  0720  07F3               	addwf	LCD_Wstring@i+1,f
  1082  0721                     l767:
  1083  0721  0872               	movf	LCD_Wstring@i,w
  1084  0722  0774               	addwf	LCD_Wstring@v,w
  1085  0723  0084               	movwf	4
  1086  0724  120A  118A  2003  120A  118A  	fcall	stringdir
  1087  0729  3A00               	xorlw	0
  1088  072A  1D03               	skipz
  1089  072B  2F2D               	goto	u61
  1090  072C  2F2E               	goto	u60
  1091  072D                     u61:
  1092  072D  2F0E               	goto	l763
  1093  072E                     u60:
  1094  072E                     l65:
  1095  072E  0008               	return
  1096  072F                     __end_of_LCD_Wstring:
  1097                           
  1098                           	psect	text7
  1099  06C3                     __ptext7:	
  1100 ;; *************** function _LCD_Wchar *****************
  1101 ;; Defined at:
  1102 ;;		line 76 in file "LAB3lib.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  c               1    wreg     unsigned char 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  c               1    1[COMMON] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         1       0       0       0       0
  1118 ;;      Temps:          1       0       0       0       0
  1119 ;;      Totals:         2       0       0       0       0
  1120 ;;Total ram usage:        2 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_LCD_Wstring
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           
  1130                           ;psect for function _LCD_Wchar
  1131  06C3                     _LCD_Wchar:
  1132                           
  1133                           ;incstack = 0
  1134                           ; Regs used in _LCD_Wchar: [wreg]
  1135                           ;LCD_Wchar@c stored from wreg
  1136  06C3  00F1               	movwf	LCD_Wchar@c
  1137  06C4                     l701:
  1138                           
  1139                           ;LAB3lib.c: 77:    PORTCbits.RC0 = 1;
  1140  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1141  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1142  06C6  1407               	bsf	7,0	;volatile
  1143  06C7                     l703:
  1144                           
  1145                           ;LAB3lib.c: 78:    PORTD = c;
  1146  06C7  0871               	movf	LCD_Wchar@c,w
  1147  06C8  0088               	movwf	8	;volatile
  1148  06C9                     l705:
  1149                           
  1150                           ;LAB3lib.c: 80:    PORTCbits.RC1 = 1;
  1151  06C9  1487               	bsf	7,1	;volatile
  1152                           
  1153                           ;LAB3lib.c: 81:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1154  06CA  300D               	movlw	13
  1155  06CB  00F0               	movwf	??_LCD_Wchar
  1156  06CC                     u177:
  1157  06CC  0BF0               	decfsz	??_LCD_Wchar,f
  1158  06CD  2ECC               	goto	u177
  1159  06CE                     l707:
  1160                           
  1161                           ;LAB3lib.c: 82:    PORTCbits.RC1 = 0;
  1162  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1163  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1164  06D0  1087               	bcf	7,1	;volatile
  1165  06D1                     l59:
  1166  06D1  0008               	return
  1167  06D2                     __end_of_LCD_Wchar:
  1168  007E                     btemp	set	126	;btemp
  1169  007E                     wtemp0	set	126
  1170                           
  1171                           	psect	config
  1172                           
  1173                           ;Config register CONFIG1 @ 0x2007
  1174                           ;	Oscillator Selection bits
  1175                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1176                           ;	Watchdog Timer Enable bit
  1177                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1178                           ;	Power-up Timer Enable bit
  1179                           ;	PWRTE = OFF, PWRT disabled
  1180                           ;	RE3/MCLR pin function select bit
  1181                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1182                           ;	Code Protection bit
  1183                           ;	CP = OFF, Program memory code protection is disabled
  1184                           ;	Data Code Protection bit
  1185                           ;	CPD = OFF, Data memory code protection is disabled
  1186                           ;	Brown Out Reset Selection bits
  1187                           ;	BOREN = OFF, BOR disabled
  1188                           ;	Internal External Switchover bit
  1189                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1190                           ;	Fail-Safe Clock Monitor Enabled bit
  1191                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1192                           ;	Low Voltage Programming Enable bit
  1193                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1194                           ;	In-Circuit Debugger Mode bit
  1195                           ;	DEBUG = 0x1, unprogrammed default
  1196  2007                     	org	8199
  1197  2007  20F4               	dw	8436
  1198                           
  1199                           ;Config register CONFIG2 @ 0x2008
  1200                           ;	Brown-out Reset Selection bit
  1201                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1202                           ;	Flash Program Memory Self Write Enable bits
  1203                           ;	WRT = OFF, Write protection off
  1204  2008                     	org	8200
  1205  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Wstring@v	PTR unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_LCD_cursor
    _setup->_LCD_ini
    _LCD_ini->_LCD_cmd
    _LCD_cursor->_LCD_cmd
    _LCD_clear->_LCD_cmd
    _LCD_Wstring->_LCD_Wchar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     502
                                              7 COMMON     3     3      0
                        _LCD_Wstring
                          _LCD_clear
                         _LCD_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _LCD_ini
 ---------------------------------------------------------------------------------
 (2) _LCD_ini                                              2     2      0      15
                                              3 COMMON     2     2      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_cursor                                           4     3      1     301
                                              3 COMMON     4     3      1
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0      15
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_cmd                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Wstring                                          3     3      0     171
                                              2 COMMON     3     3      0
                          _LCD_Wchar
 ---------------------------------------------------------------------------------
 (2) _LCD_Wchar                                            2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Wstring
     _LCD_Wchar
   _LCD_clear
     _LCD_cmd
   _LCD_cursor
     _LCD_cmd
   _setup
     _LCD_ini
       _LCD_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 17:01:05 2021

                      pc 0002                       l31 06C2                       l25 0776  
                     l50 06B1                       l26 0776                       l44 06E5  
                     l47 07F0                       l56 0709                       l65 072E  
                     l59 06D1                       u40 06EC                       u41 06EB  
                     u50 06FE                       u51 06FD                       u60 072E  
                     u61 072D                       u77 074D                       u87 076F  
                     u97 0788                       fsr 0004                      l701 06C4  
                    l703 06C7                      l711 06BD                      l705 06C9  
                    l713 06AB                      l707 06CE                      l661 06D8  
                    l709 06BA                      l663 06E2                      l751 06EC  
                    l671 0784                      l761 070B                      l657 06D3  
                    l753 06F1                      l681 07A5                      l673 078D  
                    l665 077A                      l763 070E                      l659 06D6  
                    l755 06F8                      l691 07CC                      l683 07AE  
                    l675 0790                      l667 0780                      l771 0741  
                    l765 071B                      l757 06FE                      l749 06E7  
                    l693 07D2                      l685 07B4                      l677 0796  
                    l669 0783                      l781 0769                      l773 0747  
                    l767 0721                      l759 0703                      l695 07DB  
                    l687 07BD                      l679 079F                      l775 0754  
                    l697 07E1                      l689 07C3                      l777 0759  
                    l769 072F                      l699 07EA                      l779 0763  
                    u107 079A                      u117 07A9                      u127 07B8  
                    u137 07C7                      u147 07D6                      u157 07E5  
                    u167 06DD                      u177 06CC              ?_LCD_cursor 0073  
                    fsr0 0004                      indf 0000             ?_LCD_Wstring 0070  
        __end_of_LCD_cmd 06E6          __end_of_LCD_ini 07F1                     STR_1 0013  
                   STR_2 0009                     _main 072F                     btemp 007E  
     __size_of_LCD_Wchar 000F                     start 0000       __size_of_LCD_clear 0007  
                  ?_main 0070                    _PORTD 0008                    _TRISD 0088  
                  _setup 06BA                    pclath 000A                    status 0003  
                  wtemp0 007E      __size_of_LCD_cursor 0024          __initialization 07F1  
            LCD_cursor@a 0076              LCD_cursor@x 0075              LCD_cursor@y 0073  
           __end_of_main 077A                   ??_main 0077        __end_of_LCD_Wchar 06D2  
              ??_LCD_cmd 0070                ??_LCD_ini 0073        __end_of_LCD_clear 06B2  
                 ?_setup 0070                   _check1 007B                   _check2 007A  
           LCD_Wstring@i 0072             LCD_Wstring@v 0074     __size_of_LCD_Wstring 0025  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 06C3  
           ??_LCD_cursor 0074                  ??_setup 0075               __pbssBANK0 0020  
             __pmaintext 072F       __end_of_LCD_cursor 070A                  _LCD_cmd 06D2  
                _LCD_ini 077A               __stringtab 0003                  __ptext1 06BA  
                __ptext2 077A                  __ptext3 06E6                  __ptext4 06AB  
                __ptext5 06D2                  __ptext6 070A                  __ptext7 06C3  
              _LCD_Wchar 06C3                  clrloop0 06B3                _LCD_clear 06AB  
   end_of_initialization 07FC                _LCDstring 0020                _PORTCbits 0007  
              _TRISCbits 0087               ?_LCD_Wchar 0070               ?_LCD_clear 0070  
             LCD_Wchar@c 0071               LCD_cmd@cmd 0072      start_initialization 07F1  
          ??_LCD_Wstring 0072                 ?_LCD_cmd 0070                 ?_LCD_ini 0070  
            __pbssCOMMON 007A                ___latbits 0002              ??_LCD_Wchar 0070  
            ??_LCD_clear 0073      __end_of_LCD_Wstring 072F                __pstrings 0003  
         __size_of_setup 0009                clear_ram0 06B2              __stringbase 0008  
       __size_of_LCD_cmd 0014         __size_of_LCD_ini 0077              _LCD_Wstring 070A  
     __end_of__stringtab 0009            __size_of_main 004B               _LCD_cursor 06E6  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
